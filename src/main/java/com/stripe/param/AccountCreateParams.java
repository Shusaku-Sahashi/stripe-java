// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AccountCreateParams extends ApiParamRequest {
  @SerializedName("account_token")
  String accountToken;

  @SerializedName("bank_account")
  Object bankAccount;

  @SerializedName("business_logo")
  String businessLogo;

  @SerializedName("business_name")
  String businessName;

  @SerializedName("business_primary_color")
  String businessPrimaryColor;

  @SerializedName("business_url")
  String businessUrl;

  @SerializedName("country")
  String country;

  @SerializedName("debit_negative_balances")
  Boolean debitNegativeBalances;

  @SerializedName("decline_charge_on")
  DeclineChargeOn declineChargeOn;

  @SerializedName("default_currency")
  String defaultCurrency;

  @SerializedName("email")
  String email;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("external_account")
  Object externalAccount;

  @SerializedName("from_recipient")
  String fromRecipient;

  @SerializedName("legal_entity")
  LegalEntity legalEntity;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("payout_schedule")
  PayoutSchedule payoutSchedule;

  @SerializedName("payout_statement_descriptor")
  String payoutStatementDescriptor;

  @SerializedName("product_description")
  String productDescription;

  @SerializedName("statement_descriptor")
  String statementDescriptor;

  @SerializedName("support_email")
  String supportEmail;

  @SerializedName("support_phone")
  String supportPhone;

  @SerializedName("support_url")
  String supportUrl;

  @SerializedName("tos_acceptance")
  TosAcceptance tosAcceptance;

  @SerializedName("type")
  Type type;

  private AccountCreateParams(
      String accountToken,
      Object bankAccount,
      String businessLogo,
      String businessName,
      String businessPrimaryColor,
      String businessUrl,
      String country,
      Boolean debitNegativeBalances,
      DeclineChargeOn declineChargeOn,
      String defaultCurrency,
      String email,
      List<String> expand,
      Object externalAccount,
      String fromRecipient,
      LegalEntity legalEntity,
      Map<String, String> metadata,
      PayoutSchedule payoutSchedule,
      String payoutStatementDescriptor,
      String productDescription,
      String statementDescriptor,
      String supportEmail,
      String supportPhone,
      String supportUrl,
      TosAcceptance tosAcceptance,
      Type type) {
    this.accountToken = accountToken;
    this.bankAccount = bankAccount;
    this.businessLogo = businessLogo;
    this.businessName = businessName;
    this.businessPrimaryColor = businessPrimaryColor;
    this.businessUrl = businessUrl;
    this.country = country;
    this.debitNegativeBalances = debitNegativeBalances;
    this.declineChargeOn = declineChargeOn;
    this.defaultCurrency = defaultCurrency;
    this.email = email;
    this.expand = expand;
    this.externalAccount = externalAccount;
    this.fromRecipient = fromRecipient;
    this.legalEntity = legalEntity;
    this.metadata = metadata;
    this.payoutSchedule = payoutSchedule;
    this.payoutStatementDescriptor = payoutStatementDescriptor;
    this.productDescription = productDescription;
    this.statementDescriptor = statementDescriptor;
    this.supportEmail = supportEmail;
    this.supportPhone = supportPhone;
    this.supportUrl = supportUrl;
    this.tosAcceptance = tosAcceptance;
    this.type = type;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.AccountCreateParams.Builder();
  }

  public static class Builder {
    private String accountToken;

    private Object bankAccount;

    private String businessLogo;

    private String businessName;

    private String businessPrimaryColor;

    private String businessUrl;

    private String country;

    private Boolean debitNegativeBalances;

    private DeclineChargeOn declineChargeOn;

    private String defaultCurrency;

    private String email;

    private List<String> expand;

    private Object externalAccount;

    private String fromRecipient;

    private LegalEntity legalEntity;

    private Map<String, String> metadata;

    private PayoutSchedule payoutSchedule;

    private String payoutStatementDescriptor;

    private String productDescription;

    private String statementDescriptor;

    private String supportEmail;

    private String supportPhone;

    private String supportUrl;

    private TosAcceptance tosAcceptance;

    private Type type;

    public AccountCreateParams build() {
      return new AccountCreateParams(
          accountToken,
          bankAccount,
          businessLogo,
          businessName,
          businessPrimaryColor,
          businessUrl,
          country,
          debitNegativeBalances,
          declineChargeOn,
          defaultCurrency,
          email,
          expand,
          externalAccount,
          fromRecipient,
          legalEntity,
          metadata,
          payoutSchedule,
          payoutStatementDescriptor,
          productDescription,
          statementDescriptor,
          supportEmail,
          supportPhone,
          supportUrl,
          tosAcceptance,
          type);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setAccountToken(String accountToken) {
      this.accountToken = accountToken;
      return this;
    }

    public Builder setBankAccount(Map<String, Object> bankAccount) {
      this.bankAccount = bankAccount;
      return this;
    }

    public Builder setBankAccount(String bankAccount) {
      this.bankAccount = bankAccount;
      return this;
    }

    public Builder setBusinessLogo(String businessLogo) {
      this.businessLogo = businessLogo;
      return this;
    }

    public Builder setBusinessName(String businessName) {
      this.businessName = businessName;
      return this;
    }

    public Builder setBusinessPrimaryColor(String businessPrimaryColor) {
      this.businessPrimaryColor = businessPrimaryColor;
      return this;
    }

    public Builder setBusinessUrl(String businessUrl) {
      this.businessUrl = businessUrl;
      return this;
    }

    public Builder setCountry(String country) {
      this.country = country;
      return this;
    }

    public Builder setDebitNegativeBalances(Boolean debitNegativeBalances) {
      this.debitNegativeBalances = debitNegativeBalances;
      return this;
    }

    public Builder setDeclineChargeOn(DeclineChargeOn.Builder declineChargeOn) {
      this.declineChargeOn = declineChargeOn.build();
      return this;
    }

    public Builder setDefaultCurrency(String defaultCurrency) {
      this.defaultCurrency = defaultCurrency;
      return this;
    }

    public Builder setEmail(String email) {
      this.email = email;
      return this;
    }

    public Builder setExternalAccount(Map<String, Object> externalAccount) {
      this.externalAccount = externalAccount;
      return this;
    }

    public Builder setExternalAccount(String externalAccount) {
      this.externalAccount = externalAccount;
      return this;
    }

    public Builder setFromRecipient(String fromRecipient) {
      this.fromRecipient = fromRecipient;
      return this;
    }

    public Builder setLegalEntity(LegalEntity.Builder legalEntity) {
      this.legalEntity = legalEntity.build();
      return this;
    }

    public Builder setPayoutSchedule(PayoutSchedule.Builder payoutSchedule) {
      this.payoutSchedule = payoutSchedule.build();
      return this;
    }

    public Builder setPayoutStatementDescriptor(String payoutStatementDescriptor) {
      this.payoutStatementDescriptor = payoutStatementDescriptor;
      return this;
    }

    public Builder setProductDescription(String productDescription) {
      this.productDescription = productDescription;
      return this;
    }

    public Builder setStatementDescriptor(String statementDescriptor) {
      this.statementDescriptor = statementDescriptor;
      return this;
    }

    public Builder setSupportEmail(String supportEmail) {
      this.supportEmail = supportEmail;
      return this;
    }

    public Builder setSupportPhone(String supportPhone) {
      this.supportPhone = supportPhone;
      return this;
    }

    public Builder setSupportUrl(String supportUrl) {
      this.supportUrl = supportUrl;
      return this;
    }

    public Builder setTosAcceptance(TosAcceptance.Builder tosAcceptance) {
      this.tosAcceptance = tosAcceptance.build();
      return this;
    }

    public Builder setType(Type type) {
      this.type = type;
      return this;
    }
  }

  public static class DeclineChargeOn {
    @SerializedName("avs_failure")
    Boolean avsFailure;

    @SerializedName("cvc_failure")
    Boolean cvcFailure;

    private DeclineChargeOn(Boolean avsFailure, Boolean cvcFailure) {
      this.avsFailure = avsFailure;
      this.cvcFailure = cvcFailure;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.AccountCreateParams.DeclineChargeOn.Builder();
    }

    public static class Builder {
      private Boolean avsFailure;

      private Boolean cvcFailure;

      public DeclineChargeOn build() {
        return new DeclineChargeOn(avsFailure, cvcFailure);
      }

      public Builder setAvsFailure(Boolean avsFailure) {
        this.avsFailure = avsFailure;
        return this;
      }

      public Builder setCvcFailure(Boolean cvcFailure) {
        this.cvcFailure = cvcFailure;
        return this;
      }
    }
  }

  public static class LegalEntity {
    @SerializedName("additional_owners")
    Object additionalOwners;

    @SerializedName("address")
    Address address;

    @SerializedName("address_kana")
    AddressKana addressKana;

    @SerializedName("address_kanji")
    AddressKanji addressKanji;

    @SerializedName("business_name")
    String businessName;

    @SerializedName("business_name_kana")
    String businessNameKana;

    @SerializedName("business_name_kanji")
    String businessNameKanji;

    @SerializedName("business_tax_id")
    String businessTaxId;

    @SerializedName("business_vat_id")
    String businessVatId;

    @SerializedName("dob")
    Dob dob;

    @SerializedName("first_name")
    String firstName;

    @SerializedName("first_name_kana")
    String firstNameKana;

    @SerializedName("first_name_kanji")
    String firstNameKanji;

    @SerializedName("gender")
    String gender;

    @SerializedName("last_name")
    String lastName;

    @SerializedName("last_name_kana")
    String lastNameKana;

    @SerializedName("last_name_kanji")
    String lastNameKanji;

    @SerializedName("maiden_name")
    String maidenName;

    @SerializedName("personal_address")
    PersonalAddress personalAddress;

    @SerializedName("personal_address_kana")
    PersonalAddressKana personalAddressKana;

    @SerializedName("personal_address_kanji")
    PersonalAddressKanji personalAddressKanji;

    @SerializedName("personal_id_number")
    String personalIdNumber;

    @SerializedName("phone_number")
    String phoneNumber;

    @SerializedName("ssn_last_4")
    String ssnLast4;

    @SerializedName("tax_id_registrar")
    String taxIdRegistrar;

    @SerializedName("type")
    String type;

    @SerializedName("verification")
    Verification verification;

    private LegalEntity(
        Object additionalOwners,
        Address address,
        AddressKana addressKana,
        AddressKanji addressKanji,
        String businessName,
        String businessNameKana,
        String businessNameKanji,
        String businessTaxId,
        String businessVatId,
        Dob dob,
        String firstName,
        String firstNameKana,
        String firstNameKanji,
        String gender,
        String lastName,
        String lastNameKana,
        String lastNameKanji,
        String maidenName,
        PersonalAddress personalAddress,
        PersonalAddressKana personalAddressKana,
        PersonalAddressKanji personalAddressKanji,
        String personalIdNumber,
        String phoneNumber,
        String ssnLast4,
        String taxIdRegistrar,
        String type,
        Verification verification) {
      this.additionalOwners = additionalOwners;
      this.address = address;
      this.addressKana = addressKana;
      this.addressKanji = addressKanji;
      this.businessName = businessName;
      this.businessNameKana = businessNameKana;
      this.businessNameKanji = businessNameKanji;
      this.businessTaxId = businessTaxId;
      this.businessVatId = businessVatId;
      this.dob = dob;
      this.firstName = firstName;
      this.firstNameKana = firstNameKana;
      this.firstNameKanji = firstNameKanji;
      this.gender = gender;
      this.lastName = lastName;
      this.lastNameKana = lastNameKana;
      this.lastNameKanji = lastNameKanji;
      this.maidenName = maidenName;
      this.personalAddress = personalAddress;
      this.personalAddressKana = personalAddressKana;
      this.personalAddressKanji = personalAddressKanji;
      this.personalIdNumber = personalIdNumber;
      this.phoneNumber = phoneNumber;
      this.ssnLast4 = ssnLast4;
      this.taxIdRegistrar = taxIdRegistrar;
      this.type = type;
      this.verification = verification;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.AccountCreateParams.LegalEntity.Builder();
    }

    public static class Builder {
      private Object additionalOwners;

      private Address address;

      private AddressKana addressKana;

      private AddressKanji addressKanji;

      private String businessName;

      private String businessNameKana;

      private String businessNameKanji;

      private String businessTaxId;

      private String businessVatId;

      private Dob dob;

      private String firstName;

      private String firstNameKana;

      private String firstNameKanji;

      private String gender;

      private String lastName;

      private String lastNameKana;

      private String lastNameKanji;

      private String maidenName;

      private PersonalAddress personalAddress;

      private PersonalAddressKana personalAddressKana;

      private PersonalAddressKanji personalAddressKanji;

      private String personalIdNumber;

      private String phoneNumber;

      private String ssnLast4;

      private String taxIdRegistrar;

      private String type;

      private Verification verification;

      public LegalEntity build() {
        return new LegalEntity(
            additionalOwners,
            address,
            addressKana,
            addressKanji,
            businessName,
            businessNameKana,
            businessNameKanji,
            businessTaxId,
            businessVatId,
            dob,
            firstName,
            firstNameKana,
            firstNameKanji,
            gender,
            lastName,
            lastNameKana,
            lastNameKanji,
            maidenName,
            personalAddress,
            personalAddressKana,
            personalAddressKanji,
            personalIdNumber,
            phoneNumber,
            ssnLast4,
            taxIdRegistrar,
            type,
            verification);
      }

      public Builder setAdditionalOwners(List<AdditionalOwners> additionalOwners) {
        this.additionalOwners = additionalOwners;
        return this;
      }

      public Builder setAdditionalOwners(Map<String, AdditionalOwners> additionalOwners) {
        this.additionalOwners = additionalOwners;
        return this;
      }

      public Builder setAddress(Address.Builder address) {
        this.address = address.build();
        return this;
      }

      public Builder setAddressKana(AddressKana.Builder addressKana) {
        this.addressKana = addressKana.build();
        return this;
      }

      public Builder setAddressKanji(AddressKanji.Builder addressKanji) {
        this.addressKanji = addressKanji.build();
        return this;
      }

      public Builder setBusinessName(String businessName) {
        this.businessName = businessName;
        return this;
      }

      public Builder setBusinessNameKana(String businessNameKana) {
        this.businessNameKana = businessNameKana;
        return this;
      }

      public Builder setBusinessNameKanji(String businessNameKanji) {
        this.businessNameKanji = businessNameKanji;
        return this;
      }

      public Builder setBusinessTaxId(String businessTaxId) {
        this.businessTaxId = businessTaxId;
        return this;
      }

      public Builder setBusinessVatId(String businessVatId) {
        this.businessVatId = businessVatId;
        return this;
      }

      public Builder setDob(Dob.Builder dob) {
        this.dob = dob.build();
        return this;
      }

      public Builder setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
      }

      public Builder setFirstNameKana(String firstNameKana) {
        this.firstNameKana = firstNameKana;
        return this;
      }

      public Builder setFirstNameKanji(String firstNameKanji) {
        this.firstNameKanji = firstNameKanji;
        return this;
      }

      public Builder setGender(String gender) {
        this.gender = gender;
        return this;
      }

      public Builder setLastName(String lastName) {
        this.lastName = lastName;
        return this;
      }

      public Builder setLastNameKana(String lastNameKana) {
        this.lastNameKana = lastNameKana;
        return this;
      }

      public Builder setLastNameKanji(String lastNameKanji) {
        this.lastNameKanji = lastNameKanji;
        return this;
      }

      public Builder setMaidenName(String maidenName) {
        this.maidenName = maidenName;
        return this;
      }

      public Builder setPersonalAddress(PersonalAddress.Builder personalAddress) {
        this.personalAddress = personalAddress.build();
        return this;
      }

      public Builder setPersonalAddressKana(PersonalAddressKana.Builder personalAddressKana) {
        this.personalAddressKana = personalAddressKana.build();
        return this;
      }

      public Builder setPersonalAddressKanji(PersonalAddressKanji.Builder personalAddressKanji) {
        this.personalAddressKanji = personalAddressKanji.build();
        return this;
      }

      public Builder setPersonalIdNumber(String personalIdNumber) {
        this.personalIdNumber = personalIdNumber;
        return this;
      }

      public Builder setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
      }

      public Builder setSsnLast4(String ssnLast4) {
        this.ssnLast4 = ssnLast4;
        return this;
      }

      public Builder setTaxIdRegistrar(String taxIdRegistrar) {
        this.taxIdRegistrar = taxIdRegistrar;
        return this;
      }

      public Builder setType(String type) {
        this.type = type;
        return this;
      }

      public Builder setVerification(Verification.Builder verification) {
        this.verification = verification.build();
        return this;
      }
    }

    public static class AdditionalOwners {
      @SerializedName("address")
      Address address;

      @SerializedName("dob")
      Dob dob;

      @SerializedName("email")
      String email;

      @SerializedName("first_name")
      String firstName;

      @SerializedName("last_name")
      String lastName;

      @SerializedName("maiden_name")
      String maidenName;

      @SerializedName("personal_id_number")
      String personalIdNumber;

      @SerializedName("phone")
      String phone;

      @SerializedName("ssn_last_4")
      String ssnLast4;

      @SerializedName("verification")
      Verification verification;

      private AdditionalOwners(
          Address address,
          Dob dob,
          String email,
          String firstName,
          String lastName,
          String maidenName,
          String personalIdNumber,
          String phone,
          String ssnLast4,
          Verification verification) {
        this.address = address;
        this.dob = dob;
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
        this.maidenName = maidenName;
        this.personalIdNumber = personalIdNumber;
        this.phone = phone;
        this.ssnLast4 = ssnLast4;
        this.verification = verification;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.AdditionalOwners.Builder();
      }

      public static class Builder {
        private Address address;

        private Dob dob;

        private String email;

        private String firstName;

        private String lastName;

        private String maidenName;

        private String personalIdNumber;

        private String phone;

        private String ssnLast4;

        private Verification verification;

        public AdditionalOwners build() {
          return new AdditionalOwners(
              address,
              dob,
              email,
              firstName,
              lastName,
              maidenName,
              personalIdNumber,
              phone,
              ssnLast4,
              verification);
        }

        public Builder setAddress(Address.Builder address) {
          this.address = address.build();
          return this;
        }

        public Builder setDob(Dob.Builder dob) {
          this.dob = dob.build();
          return this;
        }

        public Builder setEmail(String email) {
          this.email = email;
          return this;
        }

        public Builder setFirstName(String firstName) {
          this.firstName = firstName;
          return this;
        }

        public Builder setLastName(String lastName) {
          this.lastName = lastName;
          return this;
        }

        public Builder setMaidenName(String maidenName) {
          this.maidenName = maidenName;
          return this;
        }

        public Builder setPersonalIdNumber(String personalIdNumber) {
          this.personalIdNumber = personalIdNumber;
          return this;
        }

        public Builder setPhone(String phone) {
          this.phone = phone;
          return this;
        }

        public Builder setSsnLast4(String ssnLast4) {
          this.ssnLast4 = ssnLast4;
          return this;
        }

        public Builder setVerification(Verification.Builder verification) {
          this.verification = verification.build();
          return this;
        }
      }

      public static class Address {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        private Address(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.AccountCreateParams.LegalEntity.AdditionalOwners.Address
              .Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          public Address build() {
            return new Address(city, country, line1, line2, postalCode, state);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }
        }
      }

      public static class Dob {
        @SerializedName("day")
        Long day;

        @SerializedName("month")
        Long month;

        @SerializedName("year")
        Long year;

        private Dob(Long day, Long month, Long year) {
          this.day = day;
          this.month = month;
          this.year = year;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.AccountCreateParams.LegalEntity.AdditionalOwners.Dob
              .Builder();
        }

        public static class Builder {
          private Long day;

          private Long month;

          private Long year;

          public Dob build() {
            return new Dob(day, month, year);
          }

          public Builder setDay(Long day) {
            this.day = day;
            return this;
          }

          public Builder setMonth(Long month) {
            this.month = month;
            return this;
          }

          public Builder setYear(Long year) {
            this.year = year;
            return this;
          }
        }
      }

      public static class Verification {
        @SerializedName("document")
        String document;

        @SerializedName("status")
        Status status;

        private Verification(String document, Status status) {
          this.document = document;
          this.status = status;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.AccountCreateParams.LegalEntity.AdditionalOwners.Verification
              .Builder();
        }

        public static class Builder {
          private String document;

          private Status status;

          public Verification build() {
            return new Verification(document, status);
          }

          public Builder setDocument(String document) {
            this.document = document;
            return this;
          }

          public Builder setStatus(Status status) {
            this.status = status;
            return this;
          }
        }

        public enum Status {
          @SerializedName("pending")
          PENDING("pending"),

          @SerializedName("unverified")
          UNVERIFIED("unverified"),

          @SerializedName("verified")
          VERIFIED("verified");

          private final String value;

          Status(String value) {
            this.value = value;
          }
        }
      }
    }

    public static class Address {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      private Address(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.Address.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        public Address build() {
          return new Address(city, country, line1, line2, postalCode, state);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }
      }
    }

    public static class AddressKana {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      @SerializedName("town")
      String town;

      private AddressKana(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state,
          String town) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
        this.town = town;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.AddressKana.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        private String town;

        public AddressKana build() {
          return new AddressKana(city, country, line1, line2, postalCode, state, town);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }

        public Builder setTown(String town) {
          this.town = town;
          return this;
        }
      }
    }

    public static class AddressKanji {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      @SerializedName("town")
      String town;

      private AddressKanji(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state,
          String town) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
        this.town = town;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.AddressKanji.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        private String town;

        public AddressKanji build() {
          return new AddressKanji(city, country, line1, line2, postalCode, state, town);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }

        public Builder setTown(String town) {
          this.town = town;
          return this;
        }
      }
    }

    public static class Dob {
      @SerializedName("day")
      Long day;

      @SerializedName("month")
      Long month;

      @SerializedName("year")
      Long year;

      private Dob(Long day, Long month, Long year) {
        this.day = day;
        this.month = month;
        this.year = year;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.Dob.Builder();
      }

      public static class Builder {
        private Long day;

        private Long month;

        private Long year;

        public Dob build() {
          return new Dob(day, month, year);
        }

        public Builder setDay(Long day) {
          this.day = day;
          return this;
        }

        public Builder setMonth(Long month) {
          this.month = month;
          return this;
        }

        public Builder setYear(Long year) {
          this.year = year;
          return this;
        }
      }
    }

    public static class PersonalAddress {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      private PersonalAddress(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.PersonalAddress.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        public PersonalAddress build() {
          return new PersonalAddress(city, country, line1, line2, postalCode, state);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }
      }
    }

    public static class PersonalAddressKana {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      @SerializedName("town")
      String town;

      private PersonalAddressKana(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state,
          String town) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
        this.town = town;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.PersonalAddressKana.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        private String town;

        public PersonalAddressKana build() {
          return new PersonalAddressKana(city, country, line1, line2, postalCode, state, town);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }

        public Builder setTown(String town) {
          this.town = town;
          return this;
        }
      }
    }

    public static class PersonalAddressKanji {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      @SerializedName("town")
      String town;

      private PersonalAddressKanji(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state,
          String town) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
        this.town = town;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.PersonalAddressKanji.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        private String town;

        public PersonalAddressKanji build() {
          return new PersonalAddressKanji(city, country, line1, line2, postalCode, state, town);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }

        public Builder setTown(String town) {
          this.town = town;
          return this;
        }
      }
    }

    public static class Verification {
      @SerializedName("document")
      String document;

      @SerializedName("status")
      Status status;

      private Verification(String document, Status status) {
        this.document = document;
        this.status = status;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.AccountCreateParams.LegalEntity.Verification.Builder();
      }

      public static class Builder {
        private String document;

        private Status status;

        public Verification build() {
          return new Verification(document, status);
        }

        public Builder setDocument(String document) {
          this.document = document;
          return this;
        }

        public Builder setStatus(Status status) {
          this.status = status;
          return this;
        }
      }

      public enum Status {
        @SerializedName("pending")
        PENDING("pending"),

        @SerializedName("unverified")
        UNVERIFIED("unverified"),

        @SerializedName("verified")
        VERIFIED("verified");

        private final String value;

        Status(String value) {
          this.value = value;
        }
      }
    }
  }

  public static class PayoutSchedule {
    @SerializedName("delay_days")
    Object delayDays;

    @SerializedName("interval")
    Interval interval;

    @SerializedName("monthly_anchor")
    Long monthlyAnchor;

    @SerializedName("weekly_anchor")
    WeeklyAnchor weeklyAnchor;

    private PayoutSchedule(
        Object delayDays, Interval interval, Long monthlyAnchor, WeeklyAnchor weeklyAnchor) {
      this.delayDays = delayDays;
      this.interval = interval;
      this.monthlyAnchor = monthlyAnchor;
      this.weeklyAnchor = weeklyAnchor;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.AccountCreateParams.PayoutSchedule.Builder();
    }

    public static class Builder {
      private Object delayDays;

      private Interval interval;

      private Long monthlyAnchor;

      private WeeklyAnchor weeklyAnchor;

      public PayoutSchedule build() {
        return new PayoutSchedule(delayDays, interval, monthlyAnchor, weeklyAnchor);
      }

      public Builder setDelayDays(Long delayDays) {
        this.delayDays = delayDays;
        return this;
      }

      public Builder setDelayDays(DelayDays delayDays) {
        this.delayDays = delayDays;
        return this;
      }

      public Builder setInterval(Interval interval) {
        this.interval = interval;
        return this;
      }

      public Builder setMonthlyAnchor(Long monthlyAnchor) {
        this.monthlyAnchor = monthlyAnchor;
        return this;
      }

      public Builder setWeeklyAnchor(WeeklyAnchor weeklyAnchor) {
        this.weeklyAnchor = weeklyAnchor;
        return this;
      }
    }

    public enum DelayDays {
      @SerializedName("minimum")
      MINIMUM("minimum");

      private final String value;

      DelayDays(String value) {
        this.value = value;
      }
    }

    public enum Interval {
      @SerializedName("daily")
      DAILY("daily"),

      @SerializedName("four_times_monthly")
      FOUR_TIMES_MONTHLY("four_times_monthly"),

      @SerializedName("manual")
      MANUAL("manual"),

      @SerializedName("monthly")
      MONTHLY("monthly"),

      @SerializedName("weekly")
      WEEKLY("weekly");

      private final String value;

      Interval(String value) {
        this.value = value;
      }
    }

    public enum WeeklyAnchor {
      @SerializedName("friday")
      FRIDAY("friday"),

      @SerializedName("monday")
      MONDAY("monday"),

      @SerializedName("saturday")
      SATURDAY("saturday"),

      @SerializedName("sunday")
      SUNDAY("sunday"),

      @SerializedName("thursday")
      THURSDAY("thursday"),

      @SerializedName("tuesday")
      TUESDAY("tuesday"),

      @SerializedName("wednesday")
      WEDNESDAY("wednesday");

      private final String value;

      WeeklyAnchor(String value) {
        this.value = value;
      }
    }
  }

  public static class TosAcceptance {
    @SerializedName("date")
    Long date;

    @SerializedName("ip")
    String ip;

    @SerializedName("user_agent")
    String userAgent;

    private TosAcceptance(Long date, String ip, String userAgent) {
      this.date = date;
      this.ip = ip;
      this.userAgent = userAgent;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.AccountCreateParams.TosAcceptance.Builder();
    }

    public static class Builder {
      private Long date;

      private String ip;

      private String userAgent;

      public TosAcceptance build() {
        return new TosAcceptance(date, ip, userAgent);
      }

      public Builder setDate(Long date) {
        this.date = date;
        return this;
      }

      public Builder setIp(String ip) {
        this.ip = ip;
        return this;
      }

      public Builder setUserAgent(String userAgent) {
        this.userAgent = userAgent;
        return this;
      }
    }
  }

  public enum Type {
    @SerializedName("custom")
    CUSTOM("custom"),

    @SerializedName("express")
    EXPRESS("express"),

    @SerializedName("standard")
    STANDARD("standard");

    private final String value;

    Type(String value) {
      this.value = value;
    }
  }
}
