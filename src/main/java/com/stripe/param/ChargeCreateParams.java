// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChargeCreateParams extends ApiParamRequest {
  @SerializedName("amount")
  Long amount;

  @SerializedName("application_fee")
  Long applicationFee;

  @SerializedName("application_fee_amount")
  Long applicationFeeAmount;

  @SerializedName("capture")
  Boolean capture;

  @SerializedName("card")
  Object card;

  @SerializedName("currency")
  String currency;

  @SerializedName("customer")
  String customer;

  @SerializedName("description")
  String description;

  @SerializedName("destination")
  Object destination;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("on_behalf_of")
  String onBehalfOf;

  @SerializedName("receipt_email")
  String receiptEmail;

  @SerializedName("shipping")
  Shipping shipping;

  @SerializedName("source")
  Object source;

  @SerializedName("statement_descriptor")
  String statementDescriptor;

  @SerializedName("transfer_group")
  String transferGroup;

  private ChargeCreateParams(
      Long amount,
      Long applicationFee,
      Long applicationFeeAmount,
      Boolean capture,
      Object card,
      String currency,
      String customer,
      String description,
      Object destination,
      List<String> expand,
      Map<String, String> metadata,
      String onBehalfOf,
      String receiptEmail,
      Shipping shipping,
      Object source,
      String statementDescriptor,
      String transferGroup) {
    this.amount = amount;
    this.applicationFee = applicationFee;
    this.applicationFeeAmount = applicationFeeAmount;
    this.capture = capture;
    this.card = card;
    this.currency = currency;
    this.customer = customer;
    this.description = description;
    this.destination = destination;
    this.expand = expand;
    this.metadata = metadata;
    this.onBehalfOf = onBehalfOf;
    this.receiptEmail = receiptEmail;
    this.shipping = shipping;
    this.source = source;
    this.statementDescriptor = statementDescriptor;
    this.transferGroup = transferGroup;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.ChargeCreateParams.Builder();
  }

  public static class Builder {
    private Long amount;

    private Long applicationFee;

    private Long applicationFeeAmount;

    private Boolean capture;

    private Object card;

    private String currency;

    private String customer;

    private String description;

    private Object destination;

    private List<String> expand;

    private Map<String, String> metadata;

    private String onBehalfOf;

    private String receiptEmail;

    private Shipping shipping;

    private Object source;

    private String statementDescriptor;

    private String transferGroup;

    public ChargeCreateParams build() {
      return new ChargeCreateParams(
          amount,
          applicationFee,
          applicationFeeAmount,
          capture,
          card,
          currency,
          customer,
          description,
          destination,
          expand,
          metadata,
          onBehalfOf,
          receiptEmail,
          shipping,
          source,
          statementDescriptor,
          transferGroup);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setAmount(Long amount) {
      this.amount = amount;
      return this;
    }

    public Builder setApplicationFee(Long applicationFee) {
      this.applicationFee = applicationFee;
      return this;
    }

    public Builder setApplicationFeeAmount(Long applicationFeeAmount) {
      this.applicationFeeAmount = applicationFeeAmount;
      return this;
    }

    public Builder setCapture(Boolean capture) {
      this.capture = capture;
      return this;
    }

    public Builder setCard(Map<String, Object> card) {
      this.card = card;
      return this;
    }

    public Builder setCard(String card) {
      this.card = card;
      return this;
    }

    public Builder setCard(Card.Builder card) {
      this.card = card.build();
      return this;
    }

    public Builder setCurrency(String currency) {
      this.currency = currency;
      return this;
    }

    public Builder setCustomer(String customer) {
      this.customer = customer;
      return this;
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Builder setDestination(Destination.Builder destination) {
      this.destination = destination.build();
      return this;
    }

    public Builder setDestination(String destination) {
      this.destination = destination;
      return this;
    }

    public Builder setOnBehalfOf(String onBehalfOf) {
      this.onBehalfOf = onBehalfOf;
      return this;
    }

    public Builder setReceiptEmail(String receiptEmail) {
      this.receiptEmail = receiptEmail;
      return this;
    }

    public Builder setShipping(Shipping.Builder shipping) {
      this.shipping = shipping.build();
      return this;
    }

    public Builder setSource(Source.Builder source) {
      this.source = source.build();
      return this;
    }

    public Builder setSource(Map<String, Object> source) {
      this.source = source;
      return this;
    }

    public Builder setSource(String source) {
      this.source = source;
      return this;
    }

    public Builder setStatementDescriptor(String statementDescriptor) {
      this.statementDescriptor = statementDescriptor;
      return this;
    }

    public Builder setTransferGroup(String transferGroup) {
      this.transferGroup = transferGroup;
      return this;
    }
  }

  public static class Card {
    @SerializedName("emv_auth_data")
    String emvAuthData;

    @SerializedName("encrypted_pin")
    String encryptedPin;

    @SerializedName("encrypted_pin_key_id")
    String encryptedPinKeyId;

    @SerializedName("object")
    String object;

    @SerializedName("processing_method")
    ProcessingMethod processingMethod;

    @SerializedName("read_method")
    ReadMethod readMethod;

    private Card(
        String emvAuthData,
        String encryptedPin,
        String encryptedPinKeyId,
        String object,
        ProcessingMethod processingMethod,
        ReadMethod readMethod) {
      this.emvAuthData = emvAuthData;
      this.encryptedPin = encryptedPin;
      this.encryptedPinKeyId = encryptedPinKeyId;
      this.object = object;
      this.processingMethod = processingMethod;
      this.readMethod = readMethod;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ChargeCreateParams.Card.Builder();
    }

    public static class Builder {
      private String emvAuthData;

      private String encryptedPin;

      private String encryptedPinKeyId;

      private String object;

      private ProcessingMethod processingMethod;

      private ReadMethod readMethod;

      public Card build() {
        return new Card(
            emvAuthData, encryptedPin, encryptedPinKeyId, object, processingMethod, readMethod);
      }

      public Builder setEmvAuthData(String emvAuthData) {
        this.emvAuthData = emvAuthData;
        return this;
      }

      public Builder setEncryptedPin(String encryptedPin) {
        this.encryptedPin = encryptedPin;
        return this;
      }

      public Builder setEncryptedPinKeyId(String encryptedPinKeyId) {
        this.encryptedPinKeyId = encryptedPinKeyId;
        return this;
      }

      public Builder setObject(String object) {
        this.object = object;
        return this;
      }

      public Builder setProcessingMethod(ProcessingMethod processingMethod) {
        this.processingMethod = processingMethod;
        return this;
      }

      public Builder setReadMethod(ReadMethod readMethod) {
        this.readMethod = readMethod;
        return this;
      }
    }

    public enum ProcessingMethod {
      @SerializedName("quick_chip")
      QUICK_CHIP("quick_chip"),

      @SerializedName("traditional")
      TRADITIONAL("traditional");

      private final String value;

      ProcessingMethod(String value) {
        this.value = value;
      }
    }

    public enum ReadMethod {
      @SerializedName("contact")
      CONTACT("contact"),

      @SerializedName("contact_emv")
      CONTACT_EMV("contact_emv"),

      @SerializedName("contactless")
      CONTACTLESS("contactless"),

      @SerializedName("contactless_emv")
      CONTACTLESS_EMV("contactless_emv"),

      @SerializedName("contactless_magstripe_mode")
      CONTACTLESS_MAGSTRIPE_MODE("contactless_magstripe_mode"),

      @SerializedName("insert")
      INSERT("insert"),

      @SerializedName("keyed")
      KEYED("keyed"),

      @SerializedName("magnetic_stripe_fallback")
      MAGNETIC_STRIPE_FALLBACK("magnetic_stripe_fallback"),

      @SerializedName("magnetic_stripe_track2")
      MAGNETIC_STRIPE_TRACK2("magnetic_stripe_track2"),

      @SerializedName("swipe")
      SWIPE("swipe");

      private final String value;

      ReadMethod(String value) {
        this.value = value;
      }
    }
  }

  public static class Destination {
    @SerializedName("account")
    String account;

    @SerializedName("amount")
    Long amount;

    private Destination(String account, Long amount) {
      this.account = account;
      this.amount = amount;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ChargeCreateParams.Destination.Builder();
    }

    public static class Builder {
      private String account;

      private Long amount;

      public Destination build() {
        return new Destination(account, amount);
      }

      public Builder setAccount(String account) {
        this.account = account;
        return this;
      }

      public Builder setAmount(Long amount) {
        this.amount = amount;
        return this;
      }
    }
  }

  public static class Shipping {
    @SerializedName("address")
    Address address;

    @SerializedName("carrier")
    String carrier;

    @SerializedName("name")
    String name;

    @SerializedName("phone")
    String phone;

    @SerializedName("tracking_number")
    String trackingNumber;

    private Shipping(
        Address address, String carrier, String name, String phone, String trackingNumber) {
      this.address = address;
      this.carrier = carrier;
      this.name = name;
      this.phone = phone;
      this.trackingNumber = trackingNumber;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ChargeCreateParams.Shipping.Builder();
    }

    public static class Builder {
      private Address address;

      private String carrier;

      private String name;

      private String phone;

      private String trackingNumber;

      public Shipping build() {
        return new Shipping(address, carrier, name, phone, trackingNumber);
      }

      public Builder setAddress(Address.Builder address) {
        this.address = address.build();
        return this;
      }

      public Builder setCarrier(String carrier) {
        this.carrier = carrier;
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }

      public Builder setPhone(String phone) {
        this.phone = phone;
        return this;
      }

      public Builder setTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
        return this;
      }
    }

    public static class Address {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      private Address(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.ChargeCreateParams.Shipping.Address.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        public Address build() {
          return new Address(city, country, line1, line2, postalCode, state);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }
      }
    }
  }

  public static class Source {
    @SerializedName("emv_auth_data")
    String emvAuthData;

    @SerializedName("encrypted_pin")
    String encryptedPin;

    @SerializedName("encrypted_pin_key_id")
    String encryptedPinKeyId;

    @SerializedName("object")
    String object;

    @SerializedName("processing_method")
    ProcessingMethod processingMethod;

    @SerializedName("read_method")
    ReadMethod readMethod;

    private Source(
        String emvAuthData,
        String encryptedPin,
        String encryptedPinKeyId,
        String object,
        ProcessingMethod processingMethod,
        ReadMethod readMethod) {
      this.emvAuthData = emvAuthData;
      this.encryptedPin = encryptedPin;
      this.encryptedPinKeyId = encryptedPinKeyId;
      this.object = object;
      this.processingMethod = processingMethod;
      this.readMethod = readMethod;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ChargeCreateParams.Source.Builder();
    }

    public static class Builder {
      private String emvAuthData;

      private String encryptedPin;

      private String encryptedPinKeyId;

      private String object;

      private ProcessingMethod processingMethod;

      private ReadMethod readMethod;

      public Source build() {
        return new Source(
            emvAuthData, encryptedPin, encryptedPinKeyId, object, processingMethod, readMethod);
      }

      public Builder setEmvAuthData(String emvAuthData) {
        this.emvAuthData = emvAuthData;
        return this;
      }

      public Builder setEncryptedPin(String encryptedPin) {
        this.encryptedPin = encryptedPin;
        return this;
      }

      public Builder setEncryptedPinKeyId(String encryptedPinKeyId) {
        this.encryptedPinKeyId = encryptedPinKeyId;
        return this;
      }

      public Builder setObject(String object) {
        this.object = object;
        return this;
      }

      public Builder setProcessingMethod(ProcessingMethod processingMethod) {
        this.processingMethod = processingMethod;
        return this;
      }

      public Builder setReadMethod(ReadMethod readMethod) {
        this.readMethod = readMethod;
        return this;
      }
    }

    public enum ProcessingMethod {
      @SerializedName("quick_chip")
      QUICK_CHIP("quick_chip"),

      @SerializedName("traditional")
      TRADITIONAL("traditional");

      private final String value;

      ProcessingMethod(String value) {
        this.value = value;
      }
    }

    public enum ReadMethod {
      @SerializedName("contact")
      CONTACT("contact"),

      @SerializedName("contact_emv")
      CONTACT_EMV("contact_emv"),

      @SerializedName("contactless")
      CONTACTLESS("contactless"),

      @SerializedName("contactless_emv")
      CONTACTLESS_EMV("contactless_emv"),

      @SerializedName("contactless_magstripe_mode")
      CONTACTLESS_MAGSTRIPE_MODE("contactless_magstripe_mode"),

      @SerializedName("insert")
      INSERT("insert"),

      @SerializedName("keyed")
      KEYED("keyed"),

      @SerializedName("magnetic_stripe_fallback")
      MAGNETIC_STRIPE_FALLBACK("magnetic_stripe_fallback"),

      @SerializedName("magnetic_stripe_track2")
      MAGNETIC_STRIPE_TRACK2("magnetic_stripe_track2"),

      @SerializedName("swipe")
      SWIPE("swipe");

      private final String value;

      ReadMethod(String value) {
        this.value = value;
      }
    }
  }
}
