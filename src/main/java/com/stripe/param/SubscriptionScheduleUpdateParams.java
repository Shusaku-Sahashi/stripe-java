// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SubscriptionScheduleUpdateParams extends ApiParamRequest {
  @SerializedName("billing")
  Billing billing;

  @SerializedName("billing_thresholds")
  BillingThresholds billingThresholds;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("invoice_settings")
  InvoiceSettings invoiceSettings;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("phases")
  List<Phases> phases;

  @SerializedName("prorate")
  Boolean prorate;

  @SerializedName("renewal_behavior")
  RenewalBehavior renewalBehavior;

  @SerializedName("renewal_interval")
  RenewalInterval renewalInterval;

  private SubscriptionScheduleUpdateParams(
      Billing billing,
      BillingThresholds billingThresholds,
      List<String> expand,
      InvoiceSettings invoiceSettings,
      Map<String, String> metadata,
      List<Phases> phases,
      Boolean prorate,
      RenewalBehavior renewalBehavior,
      RenewalInterval renewalInterval) {
    this.billing = billing;
    this.billingThresholds = billingThresholds;
    this.expand = expand;
    this.invoiceSettings = invoiceSettings;
    this.metadata = metadata;
    this.phases = phases;
    this.prorate = prorate;
    this.renewalBehavior = renewalBehavior;
    this.renewalInterval = renewalInterval;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.SubscriptionScheduleUpdateParams.Builder();
  }

  public static class Builder {
    private Billing billing;

    private BillingThresholds billingThresholds;

    private List<String> expand;

    private InvoiceSettings invoiceSettings;

    private Map<String, String> metadata;

    private List<Phases> phases;

    private Boolean prorate;

    private RenewalBehavior renewalBehavior;

    private RenewalInterval renewalInterval;

    public SubscriptionScheduleUpdateParams build() {
      return new SubscriptionScheduleUpdateParams(
          billing,
          billingThresholds,
          expand,
          invoiceSettings,
          metadata,
          phases,
          prorate,
          renewalBehavior,
          renewalInterval);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder addPhases(Phases.Builder element) {
      if (this.phases == null) {
        this.phases = new ArrayList<>();
      }
      this.phases.add(element.build());
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setBilling(Billing billing) {
      this.billing = billing;
      return this;
    }

    public Builder setBillingThresholds(BillingThresholds.Builder billingThresholds) {
      this.billingThresholds = billingThresholds.build();
      return this;
    }

    public Builder setInvoiceSettings(InvoiceSettings.Builder invoiceSettings) {
      this.invoiceSettings = invoiceSettings.build();
      return this;
    }

    public Builder setProrate(Boolean prorate) {
      this.prorate = prorate;
      return this;
    }

    public Builder setRenewalBehavior(RenewalBehavior renewalBehavior) {
      this.renewalBehavior = renewalBehavior;
      return this;
    }

    public Builder setRenewalInterval(RenewalInterval.Builder renewalInterval) {
      this.renewalInterval = renewalInterval.build();
      return this;
    }
  }

  public static class BillingThresholds {
    @SerializedName("amount_gte")
    Long amountGte;

    @SerializedName("reset_billing_cycle_anchor")
    Boolean resetBillingCycleAnchor;

    private BillingThresholds(Long amountGte, Boolean resetBillingCycleAnchor) {
      this.amountGte = amountGte;
      this.resetBillingCycleAnchor = resetBillingCycleAnchor;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.SubscriptionScheduleUpdateParams.BillingThresholds.Builder();
    }

    public static class Builder {
      private Long amountGte;

      private Boolean resetBillingCycleAnchor;

      public BillingThresholds build() {
        return new BillingThresholds(amountGte, resetBillingCycleAnchor);
      }

      public Builder setAmountGte(Long amountGte) {
        this.amountGte = amountGte;
        return this;
      }

      public Builder setResetBillingCycleAnchor(Boolean resetBillingCycleAnchor) {
        this.resetBillingCycleAnchor = resetBillingCycleAnchor;
        return this;
      }
    }
  }

  public static class InvoiceSettings {
    @SerializedName("days_until_due")
    Long daysUntilDue;

    private InvoiceSettings(Long daysUntilDue) {
      this.daysUntilDue = daysUntilDue;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.SubscriptionScheduleUpdateParams.InvoiceSettings.Builder();
    }

    public static class Builder {
      private Long daysUntilDue;

      public InvoiceSettings build() {
        return new InvoiceSettings(daysUntilDue);
      }

      public Builder setDaysUntilDue(Long daysUntilDue) {
        this.daysUntilDue = daysUntilDue;
        return this;
      }
    }
  }

  public static class Phases {
    @SerializedName("application_fee_percent")
    BigDecimal applicationFeePercent;

    @SerializedName("coupon")
    String coupon;

    @SerializedName("end_date")
    String endDate;

    @SerializedName("iterations")
    Long iterations;

    @SerializedName("plans")
    List<Plans> plans;

    @SerializedName("start_date")
    String startDate;

    @SerializedName("tax_percent")
    BigDecimal taxPercent;

    @SerializedName("trial")
    Boolean trial;

    @SerializedName("trial_end")
    String trialEnd;

    private Phases(
        BigDecimal applicationFeePercent,
        String coupon,
        String endDate,
        Long iterations,
        List<Plans> plans,
        String startDate,
        BigDecimal taxPercent,
        Boolean trial,
        String trialEnd) {
      this.applicationFeePercent = applicationFeePercent;
      this.coupon = coupon;
      this.endDate = endDate;
      this.iterations = iterations;
      this.plans = plans;
      this.startDate = startDate;
      this.taxPercent = taxPercent;
      this.trial = trial;
      this.trialEnd = trialEnd;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.SubscriptionScheduleUpdateParams.Phases.Builder();
    }

    public static class Builder {
      private BigDecimal applicationFeePercent;

      private String coupon;

      private String endDate;

      private Long iterations;

      private List<Plans> plans;

      private String startDate;

      private BigDecimal taxPercent;

      private Boolean trial;

      private String trialEnd;

      public Phases build() {
        return new Phases(
            applicationFeePercent,
            coupon,
            endDate,
            iterations,
            plans,
            startDate,
            taxPercent,
            trial,
            trialEnd);
      }

      public Builder addPlans(Plans.Builder element) {
        if (this.plans == null) {
          this.plans = new ArrayList<>();
        }
        this.plans.add(element.build());
        return this;
      }

      public Builder setApplicationFeePercent(BigDecimal applicationFeePercent) {
        this.applicationFeePercent = applicationFeePercent;
        return this;
      }

      public Builder setCoupon(String coupon) {
        this.coupon = coupon;
        return this;
      }

      public Builder setEndDate(String endDate) {
        this.endDate = endDate;
        return this;
      }

      public Builder setIterations(Long iterations) {
        this.iterations = iterations;
        return this;
      }

      public Builder setStartDate(String startDate) {
        this.startDate = startDate;
        return this;
      }

      public Builder setTaxPercent(BigDecimal taxPercent) {
        this.taxPercent = taxPercent;
        return this;
      }

      public Builder setTrial(Boolean trial) {
        this.trial = trial;
        return this;
      }

      public Builder setTrialEnd(String trialEnd) {
        this.trialEnd = trialEnd;
        return this;
      }
    }

    public static class Plans {
      @SerializedName("billing_thresholds")
      BillingThresholds billingThresholds;

      @SerializedName("plan")
      String plan;

      @SerializedName("quantity")
      Long quantity;

      private Plans(BillingThresholds billingThresholds, String plan, Long quantity) {
        this.billingThresholds = billingThresholds;
        this.plan = plan;
        this.quantity = quantity;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.SubscriptionScheduleUpdateParams.Phases.Plans.Builder();
      }

      public static class Builder {
        private BillingThresholds billingThresholds;

        private String plan;

        private Long quantity;

        public Plans build() {
          return new Plans(billingThresholds, plan, quantity);
        }

        public Builder setBillingThresholds(BillingThresholds.Builder billingThresholds) {
          this.billingThresholds = billingThresholds.build();
          return this;
        }

        public Builder setPlan(String plan) {
          this.plan = plan;
          return this;
        }

        public Builder setQuantity(Long quantity) {
          this.quantity = quantity;
          return this;
        }
      }

      public static class BillingThresholds {
        @SerializedName("usage_gte")
        Long usageGte;

        private BillingThresholds(Long usageGte) {
          this.usageGte = usageGte;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.SubscriptionScheduleUpdateParams.Phases.Plans
              .BillingThresholds.Builder();
        }

        public static class Builder {
          private Long usageGte;

          public BillingThresholds build() {
            return new BillingThresholds(usageGte);
          }

          public Builder setUsageGte(Long usageGte) {
            this.usageGte = usageGte;
            return this;
          }
        }
      }
    }
  }

  public static class RenewalInterval {
    @SerializedName("interval")
    Interval interval;

    @SerializedName("length")
    Long length;

    private RenewalInterval(Interval interval, Long length) {
      this.interval = interval;
      this.length = length;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.SubscriptionScheduleUpdateParams.RenewalInterval.Builder();
    }

    public static class Builder {
      private Interval interval;

      private Long length;

      public RenewalInterval build() {
        return new RenewalInterval(interval, length);
      }

      public Builder setInterval(Interval interval) {
        this.interval = interval;
        return this;
      }

      public Builder setLength(Long length) {
        this.length = length;
        return this;
      }
    }

    public enum Interval {
      @SerializedName("day")
      DAY("day"),

      @SerializedName("month")
      MONTH("month"),

      @SerializedName("week")
      WEEK("week"),

      @SerializedName("year")
      YEAR("year");

      private final String value;

      Interval(String value) {
        this.value = value;
      }
    }
  }

  public enum Billing {
    @SerializedName("charge_automatically")
    CHARGE_AUTOMATICALLY("charge_automatically"),

    @SerializedName("send_invoice")
    SEND_INVOICE("send_invoice");

    private final String value;

    Billing(String value) {
      this.value = value;
    }
  }

  public enum RenewalBehavior {
    @SerializedName("none")
    NONE("none"),

    @SerializedName("release")
    RELEASE("release"),

    @SerializedName("renew")
    RENEW("renew");

    private final String value;

    RenewalBehavior(String value) {
      this.value = value;
    }
  }
}
