// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RefundCollectionCreateParams extends ApiParamRequest {
  @SerializedName("amount")
  Long amount;

  @SerializedName("description")
  String description;

  @SerializedName("directive")
  Object directive;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("reason")
  Reason reason;

  @SerializedName("refund_application_fee")
  Boolean refundApplicationFee;

  @SerializedName("reverse_transfer")
  Boolean reverseTransfer;

  private RefundCollectionCreateParams(
      Long amount,
      String description,
      Object directive,
      List<String> expand,
      Map<String, String> metadata,
      Reason reason,
      Boolean refundApplicationFee,
      Boolean reverseTransfer) {
    this.amount = amount;
    this.description = description;
    this.directive = directive;
    this.expand = expand;
    this.metadata = metadata;
    this.reason = reason;
    this.refundApplicationFee = refundApplicationFee;
    this.reverseTransfer = reverseTransfer;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.RefundCollectionCreateParams.Builder();
  }

  public static class Builder {
    private Long amount;

    private String description;

    private Object directive;

    private List<String> expand;

    private Map<String, String> metadata;

    private Reason reason;

    private Boolean refundApplicationFee;

    private Boolean reverseTransfer;

    public RefundCollectionCreateParams build() {
      return new RefundCollectionCreateParams(
          amount,
          description,
          directive,
          expand,
          metadata,
          reason,
          refundApplicationFee,
          reverseTransfer);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setAmount(Long amount) {
      this.amount = amount;
      return this;
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Builder setDirective(Directive directive) {
      this.directive = directive;
      return this;
    }

    public Builder setDirective(String directive) {
      this.directive = directive;
      return this;
    }

    public Builder setReason(Reason reason) {
      this.reason = reason;
      return this;
    }

    public Builder setRefundApplicationFee(Boolean refundApplicationFee) {
      this.refundApplicationFee = refundApplicationFee;
      return this;
    }

    public Builder setReverseTransfer(Boolean reverseTransfer) {
      this.reverseTransfer = reverseTransfer;
      return this;
    }
  }

  public enum Directive {
    @SerializedName("risk_refund")
    RISK_REFUND("risk_refund");

    private final String value;

    Directive(String value) {
      this.value = value;
    }
  }

  public enum Reason {
    @SerializedName("duplicate")
    DUPLICATE("duplicate"),

    @SerializedName("fraudulent")
    FRAUDULENT("fraudulent"),

    @SerializedName("requested_by_customer")
    REQUESTED_BY_CUSTOMER("requested_by_customer");

    private final String value;

    Reason(String value) {
      this.value = value;
    }
  }
}
