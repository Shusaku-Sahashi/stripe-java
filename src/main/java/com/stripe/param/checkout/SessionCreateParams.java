// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param.checkout;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SessionCreateParams extends ApiParamRequest {
  @SerializedName("cancel_url")
  String cancelUrl;

  @SerializedName("client_reference_id")
  String clientReferenceId;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("line_items")
  List<LineItems> lineItems;

  @SerializedName("payment_intent_data")
  PaymentIntentData paymentIntentData;

  @SerializedName("payment_method_types")
  List<PaymentMethodTypes> paymentMethodTypes;

  @SerializedName("subscription_data")
  SubscriptionData subscriptionData;

  @SerializedName("success_url")
  String successUrl;

  private SessionCreateParams(
      String cancelUrl,
      String clientReferenceId,
      List<String> expand,
      List<LineItems> lineItems,
      PaymentIntentData paymentIntentData,
      List<PaymentMethodTypes> paymentMethodTypes,
      SubscriptionData subscriptionData,
      String successUrl) {
    this.cancelUrl = cancelUrl;
    this.clientReferenceId = clientReferenceId;
    this.expand = expand;
    this.lineItems = lineItems;
    this.paymentIntentData = paymentIntentData;
    this.paymentMethodTypes = paymentMethodTypes;
    this.subscriptionData = subscriptionData;
    this.successUrl = successUrl;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.checkout.SessionCreateParams.Builder();
  }

  public static class Builder {
    private String cancelUrl;

    private String clientReferenceId;

    private List<String> expand;

    private List<LineItems> lineItems;

    private PaymentIntentData paymentIntentData;

    private List<PaymentMethodTypes> paymentMethodTypes;

    private SubscriptionData subscriptionData;

    private String successUrl;

    public SessionCreateParams build() {
      return new SessionCreateParams(
          cancelUrl,
          clientReferenceId,
          expand,
          lineItems,
          paymentIntentData,
          paymentMethodTypes,
          subscriptionData,
          successUrl);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder addLineItems(LineItems.Builder element) {
      if (this.lineItems == null) {
        this.lineItems = new ArrayList<>();
      }
      this.lineItems.add(element.build());
      return this;
    }

    public Builder addPaymentMethodTypes(PaymentMethodTypes element) {
      if (this.paymentMethodTypes == null) {
        this.paymentMethodTypes = new ArrayList<>();
      }
      this.paymentMethodTypes.add(element);
      return this;
    }

    public Builder setCancelUrl(String cancelUrl) {
      this.cancelUrl = cancelUrl;
      return this;
    }

    public Builder setClientReferenceId(String clientReferenceId) {
      this.clientReferenceId = clientReferenceId;
      return this;
    }

    public Builder setPaymentIntentData(PaymentIntentData.Builder paymentIntentData) {
      this.paymentIntentData = paymentIntentData.build();
      return this;
    }

    public Builder setSubscriptionData(SubscriptionData.Builder subscriptionData) {
      this.subscriptionData = subscriptionData.build();
      return this;
    }

    public Builder setSuccessUrl(String successUrl) {
      this.successUrl = successUrl;
      return this;
    }
  }

  public static class LineItems {
    @SerializedName("amount")
    Long amount;

    @SerializedName("currency")
    String currency;

    @SerializedName("description")
    String description;

    @SerializedName("images")
    List<String> images;

    @SerializedName("name")
    String name;

    @SerializedName("quantity")
    Long quantity;

    private LineItems(
        Long amount,
        String currency,
        String description,
        List<String> images,
        String name,
        Long quantity) {
      this.amount = amount;
      this.currency = currency;
      this.description = description;
      this.images = images;
      this.name = name;
      this.quantity = quantity;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.checkout.SessionCreateParams.LineItems.Builder();
    }

    public static class Builder {
      private Long amount;

      private String currency;

      private String description;

      private List<String> images;

      private String name;

      private Long quantity;

      public LineItems build() {
        return new LineItems(amount, currency, description, images, name, quantity);
      }

      public Builder addImages(String element) {
        if (this.images == null) {
          this.images = new ArrayList<>();
        }
        this.images.add(element);
        return this;
      }

      public Builder setAmount(Long amount) {
        this.amount = amount;
        return this;
      }

      public Builder setCurrency(String currency) {
        this.currency = currency;
        return this;
      }

      public Builder setDescription(String description) {
        this.description = description;
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }

      public Builder setQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
      }
    }
  }

  public static class PaymentIntentData {
    @SerializedName("description")
    String description;

    @SerializedName("metadata")
    Map<String, String> metadata;

    @SerializedName("receipt_email")
    String receiptEmail;

    @SerializedName("shipping")
    Shipping shipping;

    @SerializedName("statement_descriptor")
    String statementDescriptor;

    private PaymentIntentData(
        String description,
        Map<String, String> metadata,
        String receiptEmail,
        Shipping shipping,
        String statementDescriptor) {
      this.description = description;
      this.metadata = metadata;
      this.receiptEmail = receiptEmail;
      this.shipping = shipping;
      this.statementDescriptor = statementDescriptor;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.checkout.SessionCreateParams.PaymentIntentData.Builder();
    }

    public static class Builder {
      private String description;

      private Map<String, String> metadata;

      private String receiptEmail;

      private Shipping shipping;

      private String statementDescriptor;

      public PaymentIntentData build() {
        return new PaymentIntentData(
            description, metadata, receiptEmail, shipping, statementDescriptor);
      }

      public Builder putMetadata(String key, String value) {
        if (this.metadata == null) {
          this.metadata = new HashMap<>();
        }
        this.metadata.put(key, value);
        return this;
      }

      public Builder setDescription(String description) {
        this.description = description;
        return this;
      }

      public Builder setReceiptEmail(String receiptEmail) {
        this.receiptEmail = receiptEmail;
        return this;
      }

      public Builder setShipping(Shipping.Builder shipping) {
        this.shipping = shipping.build();
        return this;
      }

      public Builder setStatementDescriptor(String statementDescriptor) {
        this.statementDescriptor = statementDescriptor;
        return this;
      }
    }

    public static class Shipping {
      @SerializedName("address")
      Address address;

      @SerializedName("carrier")
      String carrier;

      @SerializedName("name")
      String name;

      @SerializedName("phone")
      String phone;

      @SerializedName("tracking_number")
      String trackingNumber;

      private Shipping(
          Address address, String carrier, String name, String phone, String trackingNumber) {
        this.address = address;
        this.carrier = carrier;
        this.name = name;
        this.phone = phone;
        this.trackingNumber = trackingNumber;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.checkout.SessionCreateParams.PaymentIntentData.Shipping
            .Builder();
      }

      public static class Builder {
        private Address address;

        private String carrier;

        private String name;

        private String phone;

        private String trackingNumber;

        public Shipping build() {
          return new Shipping(address, carrier, name, phone, trackingNumber);
        }

        public Builder setAddress(Address.Builder address) {
          this.address = address.build();
          return this;
        }

        public Builder setCarrier(String carrier) {
          this.carrier = carrier;
          return this;
        }

        public Builder setName(String name) {
          this.name = name;
          return this;
        }

        public Builder setPhone(String phone) {
          this.phone = phone;
          return this;
        }

        public Builder setTrackingNumber(String trackingNumber) {
          this.trackingNumber = trackingNumber;
          return this;
        }
      }

      public static class Address {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        private Address(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.checkout.SessionCreateParams.PaymentIntentData.Shipping
              .Address.Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          public Address build() {
            return new Address(city, country, line1, line2, postalCode, state);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }
        }
      }
    }
  }

  public static class SubscriptionData {
    @SerializedName("items")
    List<Items> items;

    @SerializedName("metadata")
    Map<String, String> metadata;

    private SubscriptionData(List<Items> items, Map<String, String> metadata) {
      this.items = items;
      this.metadata = metadata;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.checkout.SessionCreateParams.SubscriptionData.Builder();
    }

    public static class Builder {
      private List<Items> items;

      private Map<String, String> metadata;

      public SubscriptionData build() {
        return new SubscriptionData(items, metadata);
      }

      public Builder addItems(Items.Builder element) {
        if (this.items == null) {
          this.items = new ArrayList<>();
        }
        this.items.add(element.build());
        return this;
      }

      public Builder putMetadata(String key, String value) {
        if (this.metadata == null) {
          this.metadata = new HashMap<>();
        }
        this.metadata.put(key, value);
        return this;
      }
    }

    public static class Items {
      @SerializedName("plan")
      String plan;

      @SerializedName("quantity")
      Long quantity;

      private Items(String plan, Long quantity) {
        this.plan = plan;
        this.quantity = quantity;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.checkout.SessionCreateParams.SubscriptionData.Items.Builder();
      }

      public static class Builder {
        private String plan;

        private Long quantity;

        public Items build() {
          return new Items(plan, quantity);
        }

        public Builder setPlan(String plan) {
          this.plan = plan;
          return this;
        }

        public Builder setQuantity(Long quantity) {
          this.quantity = quantity;
          return this;
        }
      }
    }
  }

  public enum PaymentMethodTypes {
    @SerializedName("card")
    CARD("card");

    private final String value;

    PaymentMethodTypes(String value) {
      this.value = value;
    }
  }
}
