// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ChargeUpdateParams extends ApiParamRequest {
  @SerializedName("customer")
  String customer;

  @SerializedName("description")
  String description;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("fraud_details")
  FraudDetails fraudDetails;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("receipt_email")
  String receiptEmail;

  @SerializedName("shipping")
  Shipping shipping;

  @SerializedName("transfer_group")
  String transferGroup;

  private ChargeUpdateParams(
      String customer,
      String description,
      List<String> expand,
      FraudDetails fraudDetails,
      Map<String, String> metadata,
      String receiptEmail,
      Shipping shipping,
      String transferGroup) {
    this.customer = customer;
    this.description = description;
    this.expand = expand;
    this.fraudDetails = fraudDetails;
    this.metadata = metadata;
    this.receiptEmail = receiptEmail;
    this.shipping = shipping;
    this.transferGroup = transferGroup;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.ChargeUpdateParams.Builder();
  }

  public static class Builder {
    private String customer;

    private String description;

    private List<String> expand;

    private FraudDetails fraudDetails;

    private Map<String, String> metadata;

    private String receiptEmail;

    private Shipping shipping;

    private String transferGroup;

    public ChargeUpdateParams build() {
      return new ChargeUpdateParams(
          customer,
          description,
          expand,
          fraudDetails,
          metadata,
          receiptEmail,
          shipping,
          transferGroup);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setCustomer(String customer) {
      this.customer = customer;
      return this;
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Builder setFraudDetails(FraudDetails.Builder fraudDetails) {
      this.fraudDetails = fraudDetails.build();
      return this;
    }

    public Builder setReceiptEmail(String receiptEmail) {
      this.receiptEmail = receiptEmail;
      return this;
    }

    public Builder setShipping(Shipping.Builder shipping) {
      this.shipping = shipping.build();
      return this;
    }

    public Builder setTransferGroup(String transferGroup) {
      this.transferGroup = transferGroup;
      return this;
    }
  }

  public static class FraudDetails {
    @SerializedName("user_report")
    UserReport userReport;

    private FraudDetails(UserReport userReport) {
      this.userReport = userReport;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ChargeUpdateParams.FraudDetails.Builder();
    }

    public static class Builder {
      private UserReport userReport;

      public FraudDetails build() {
        return new FraudDetails(userReport);
      }

      public Builder setUserReport(UserReport userReport) {
        this.userReport = userReport;
        return this;
      }
    }

    public enum UserReport {
      @SerializedName("fraudulent")
      FRAUDULENT("fraudulent"),

      @SerializedName("safe")
      SAFE("safe");

      private final String value;

      UserReport(String value) {
        this.value = value;
      }
    }
  }

  public static class Shipping {
    @SerializedName("address")
    Address address;

    @SerializedName("carrier")
    String carrier;

    @SerializedName("name")
    String name;

    @SerializedName("phone")
    String phone;

    @SerializedName("tracking_number")
    String trackingNumber;

    private Shipping(
        Address address, String carrier, String name, String phone, String trackingNumber) {
      this.address = address;
      this.carrier = carrier;
      this.name = name;
      this.phone = phone;
      this.trackingNumber = trackingNumber;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ChargeUpdateParams.Shipping.Builder();
    }

    public static class Builder {
      private Address address;

      private String carrier;

      private String name;

      private String phone;

      private String trackingNumber;

      public Shipping build() {
        return new Shipping(address, carrier, name, phone, trackingNumber);
      }

      public Builder setAddress(Address.Builder address) {
        this.address = address.build();
        return this;
      }

      public Builder setCarrier(String carrier) {
        this.carrier = carrier;
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }

      public Builder setPhone(String phone) {
        this.phone = phone;
        return this;
      }

      public Builder setTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
        return this;
      }
    }

    public static class Address {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      private Address(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.ChargeUpdateParams.Shipping.Address.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        public Address build() {
          return new Address(city, country, line1, line2, postalCode, state);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }
      }
    }
  }
}
