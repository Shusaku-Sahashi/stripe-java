// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.List;

public class OrderReturnOrderParams extends ApiParamRequest {
  @SerializedName("expand")
  List<String> expand;

  @SerializedName("items")
  List<Items> items;

  private OrderReturnOrderParams(List<String> expand, List<Items> items) {
    this.expand = expand;
    this.items = items;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.OrderReturnOrderParams.Builder();
  }

  public static class Builder {
    private List<String> expand;

    private List<Items> items;

    public OrderReturnOrderParams build() {
      return new OrderReturnOrderParams(expand, items);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder addItems(Items.Builder element) {
      if (this.items == null) {
        this.items = new ArrayList<>();
      }
      this.items.add(element.build());
      return this;
    }
  }

  public static class Items {
    @SerializedName("amount")
    Long amount;

    @SerializedName("description")
    String description;

    @SerializedName("parent")
    String parent;

    @SerializedName("quantity")
    Long quantity;

    @SerializedName("type")
    Type type;

    private Items(Long amount, String description, String parent, Long quantity, Type type) {
      this.amount = amount;
      this.description = description;
      this.parent = parent;
      this.quantity = quantity;
      this.type = type;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.OrderReturnOrderParams.Items.Builder();
    }

    public static class Builder {
      private Long amount;

      private String description;

      private String parent;

      private Long quantity;

      private Type type;

      public Items build() {
        return new Items(amount, description, parent, quantity, type);
      }

      public Builder setAmount(Long amount) {
        this.amount = amount;
        return this;
      }

      public Builder setDescription(String description) {
        this.description = description;
        return this;
      }

      public Builder setParent(String parent) {
        this.parent = parent;
        return this;
      }

      public Builder setQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
      }

      public Builder setType(Type type) {
        this.type = type;
        return this;
      }
    }

    public enum Type {
      @SerializedName("discount")
      DISCOUNT("discount"),

      @SerializedName("shipping")
      SHIPPING("shipping"),

      @SerializedName("sku")
      SKU("sku"),

      @SerializedName("tax")
      TAX("tax");

      private final String value;

      Type(String value) {
        this.value = value;
      }
    }
  }
}
