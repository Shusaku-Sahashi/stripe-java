// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomerCreateParams extends ApiParamRequest {
  @SerializedName("account_balance")
  Long accountBalance;

  @SerializedName("coupon")
  String coupon;

  @SerializedName("customer")
  String customer;

  @SerializedName("default_source")
  String defaultSource;

  @SerializedName("description")
  String description;

  @SerializedName("email")
  String email;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("id")
  String id;

  @SerializedName("invoice_prefix")
  String invoicePrefix;

  @SerializedName("invoice_settings")
  InvoiceSettings invoiceSettings;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("shipping")
  Shipping shipping;

  @SerializedName("source")
  Object source;

  @SerializedName("tax_info")
  TaxInfo taxInfo;

  private CustomerCreateParams(
      Long accountBalance,
      String coupon,
      String customer,
      String defaultSource,
      String description,
      String email,
      List<String> expand,
      String id,
      String invoicePrefix,
      InvoiceSettings invoiceSettings,
      Map<String, String> metadata,
      Shipping shipping,
      Object source,
      TaxInfo taxInfo) {
    this.accountBalance = accountBalance;
    this.coupon = coupon;
    this.customer = customer;
    this.defaultSource = defaultSource;
    this.description = description;
    this.email = email;
    this.expand = expand;
    this.id = id;
    this.invoicePrefix = invoicePrefix;
    this.invoiceSettings = invoiceSettings;
    this.metadata = metadata;
    this.shipping = shipping;
    this.source = source;
    this.taxInfo = taxInfo;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.CustomerCreateParams.Builder();
  }

  public static class Builder {
    private Long accountBalance;

    private String coupon;

    private String customer;

    private String defaultSource;

    private String description;

    private String email;

    private List<String> expand;

    private String id;

    private String invoicePrefix;

    private InvoiceSettings invoiceSettings;

    private Map<String, String> metadata;

    private Shipping shipping;

    private Object source;

    private TaxInfo taxInfo;

    public CustomerCreateParams build() {
      return new CustomerCreateParams(
          accountBalance,
          coupon,
          customer,
          defaultSource,
          description,
          email,
          expand,
          id,
          invoicePrefix,
          invoiceSettings,
          metadata,
          shipping,
          source,
          taxInfo);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setAccountBalance(Long accountBalance) {
      this.accountBalance = accountBalance;
      return this;
    }

    public Builder setCoupon(String coupon) {
      this.coupon = coupon;
      return this;
    }

    public Builder setCustomer(String customer) {
      this.customer = customer;
      return this;
    }

    public Builder setDefaultSource(String defaultSource) {
      this.defaultSource = defaultSource;
      return this;
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Builder setEmail(String email) {
      this.email = email;
      return this;
    }

    public Builder setId(String id) {
      this.id = id;
      return this;
    }

    public Builder setInvoicePrefix(String invoicePrefix) {
      this.invoicePrefix = invoicePrefix;
      return this;
    }

    public Builder setInvoiceSettings(InvoiceSettings.Builder invoiceSettings) {
      this.invoiceSettings = invoiceSettings.build();
      return this;
    }

    public Builder setShipping(Shipping.Builder shipping) {
      this.shipping = shipping.build();
      return this;
    }

    public Builder setSource(Map<String, Object> source) {
      this.source = source;
      return this;
    }

    public Builder setSource(String source) {
      this.source = source;
      return this;
    }

    public Builder setTaxInfo(TaxInfo.Builder taxInfo) {
      this.taxInfo = taxInfo.build();
      return this;
    }
  }

  public static class InvoiceSettings {
    @SerializedName("custom_fields")
    List<CustomFields> customFields;

    @SerializedName("footer")
    String footer;

    private InvoiceSettings(List<CustomFields> customFields, String footer) {
      this.customFields = customFields;
      this.footer = footer;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.CustomerCreateParams.InvoiceSettings.Builder();
    }

    public static class Builder {
      private List<CustomFields> customFields;

      private String footer;

      public InvoiceSettings build() {
        return new InvoiceSettings(customFields, footer);
      }

      public Builder addCustomFields(CustomFields.Builder element) {
        if (this.customFields == null) {
          this.customFields = new ArrayList<>();
        }
        this.customFields.add(element.build());
        return this;
      }

      public Builder setFooter(String footer) {
        this.footer = footer;
        return this;
      }
    }

    public static class CustomFields {
      @SerializedName("name")
      String name;

      @SerializedName("value")
      String value;

      private CustomFields(String name, String value) {
        this.name = name;
        this.value = value;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.CustomerCreateParams.InvoiceSettings.CustomFields.Builder();
      }

      public static class Builder {
        private String name;

        private String value;

        public CustomFields build() {
          return new CustomFields(name, value);
        }

        public Builder setName(String name) {
          this.name = name;
          return this;
        }

        public Builder setValue(String value) {
          this.value = value;
          return this;
        }
      }
    }
  }

  public static class Shipping {
    @SerializedName("address")
    Address address;

    @SerializedName("name")
    String name;

    @SerializedName("phone")
    String phone;

    private Shipping(Address address, String name, String phone) {
      this.address = address;
      this.name = name;
      this.phone = phone;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.CustomerCreateParams.Shipping.Builder();
    }

    public static class Builder {
      private Address address;

      private String name;

      private String phone;

      public Shipping build() {
        return new Shipping(address, name, phone);
      }

      public Builder setAddress(Address.Builder address) {
        this.address = address.build();
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }

      public Builder setPhone(String phone) {
        this.phone = phone;
        return this;
      }
    }

    public static class Address {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      private Address(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.CustomerCreateParams.Shipping.Address.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        public Address build() {
          return new Address(city, country, line1, line2, postalCode, state);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }
      }
    }
  }

  public static class TaxInfo {
    @SerializedName("tax_id")
    String taxId;

    @SerializedName("type")
    Type type;

    private TaxInfo(String taxId, Type type) {
      this.taxId = taxId;
      this.type = type;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.CustomerCreateParams.TaxInfo.Builder();
    }

    public static class Builder {
      private String taxId;

      private Type type;

      public TaxInfo build() {
        return new TaxInfo(taxId, type);
      }

      public Builder setTaxId(String taxId) {
        this.taxId = taxId;
        return this;
      }

      public Builder setType(Type type) {
        this.type = type;
        return this;
      }
    }

    public enum Type {
      @SerializedName("vat")
      VAT("vat");

      private final String value;

      Type(String value) {
        this.value = value;
      }
    }
  }
}
