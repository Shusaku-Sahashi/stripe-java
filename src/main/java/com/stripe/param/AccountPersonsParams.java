// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.List;

public class AccountPersonsParams extends ApiParamRequest {
  @SerializedName("ending_before")
  String endingBefore;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("limit")
  Long limit;

  @SerializedName("relationship")
  Relationship relationship;

  @SerializedName("starting_after")
  String startingAfter;

  private AccountPersonsParams(
      String endingBefore,
      List<String> expand,
      Long limit,
      Relationship relationship,
      String startingAfter) {
    this.endingBefore = endingBefore;
    this.expand = expand;
    this.limit = limit;
    this.relationship = relationship;
    this.startingAfter = startingAfter;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.AccountPersonsParams.Builder();
  }

  public static class Builder {
    private String endingBefore;

    private List<String> expand;

    private Long limit;

    private Relationship relationship;

    private String startingAfter;

    public AccountPersonsParams build() {
      return new AccountPersonsParams(endingBefore, expand, limit, relationship, startingAfter);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder setEndingBefore(String endingBefore) {
      this.endingBefore = endingBefore;
      return this;
    }

    public Builder setLimit(Long limit) {
      this.limit = limit;
      return this;
    }

    public Builder setRelationship(Relationship.Builder relationship) {
      this.relationship = relationship.build();
      return this;
    }

    public Builder setStartingAfter(String startingAfter) {
      this.startingAfter = startingAfter;
      return this;
    }
  }

  public static class Relationship {
    @SerializedName("account_opener")
    Boolean accountOpener;

    @SerializedName("director")
    Boolean director;

    @SerializedName("executive")
    Boolean executive;

    @SerializedName("owner")
    Boolean owner;

    private Relationship(
        Boolean accountOpener, Boolean director, Boolean executive, Boolean owner) {
      this.accountOpener = accountOpener;
      this.director = director;
      this.executive = executive;
      this.owner = owner;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.AccountPersonsParams.Relationship.Builder();
    }

    public static class Builder {
      private Boolean accountOpener;

      private Boolean director;

      private Boolean executive;

      private Boolean owner;

      public Relationship build() {
        return new Relationship(accountOpener, director, executive, owner);
      }

      public Builder setAccountOpener(Boolean accountOpener) {
        this.accountOpener = accountOpener;
        return this;
      }

      public Builder setDirector(Boolean director) {
        this.director = director;
        return this;
      }

      public Builder setExecutive(Boolean executive) {
        this.executive = executive;
        return this;
      }

      public Builder setOwner(Boolean owner) {
        this.owner = owner;
        return this;
      }
    }
  }
}
