// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param.issuing;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CardholderCreateParams extends ApiParamRequest {
  @SerializedName("billing")
  Billing billing;

  @SerializedName("email")
  String email;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("is_default")
  Boolean isDefault;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("name")
  String name;

  @SerializedName("phone_number")
  String phoneNumber;

  @SerializedName("status")
  Status status;

  @SerializedName("type")
  Type type;

  private CardholderCreateParams(
      Billing billing,
      String email,
      List<String> expand,
      Boolean isDefault,
      Map<String, String> metadata,
      String name,
      String phoneNumber,
      Status status,
      Type type) {
    this.billing = billing;
    this.email = email;
    this.expand = expand;
    this.isDefault = isDefault;
    this.metadata = metadata;
    this.name = name;
    this.phoneNumber = phoneNumber;
    this.status = status;
    this.type = type;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.issuing.CardholderCreateParams.Builder();
  }

  public static class Builder {
    private Billing billing;

    private String email;

    private List<String> expand;

    private Boolean isDefault;

    private Map<String, String> metadata;

    private String name;

    private String phoneNumber;

    private Status status;

    private Type type;

    public CardholderCreateParams build() {
      return new CardholderCreateParams(
          billing, email, expand, isDefault, metadata, name, phoneNumber, status, type);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setBilling(Billing.Builder billing) {
      this.billing = billing.build();
      return this;
    }

    public Builder setEmail(String email) {
      this.email = email;
      return this;
    }

    public Builder setIsDefault(Boolean isDefault) {
      this.isDefault = isDefault;
      return this;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    public Builder setPhoneNumber(String phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    public Builder setStatus(Status status) {
      this.status = status;
      return this;
    }

    public Builder setType(Type type) {
      this.type = type;
      return this;
    }
  }

  public static class Billing {
    @SerializedName("address")
    Address address;

    @SerializedName("name")
    String name;

    private Billing(Address address, String name) {
      this.address = address;
      this.name = name;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.issuing.CardholderCreateParams.Billing.Builder();
    }

    public static class Builder {
      private Address address;

      private String name;

      public Billing build() {
        return new Billing(address, name);
      }

      public Builder setAddress(Address.Builder address) {
        this.address = address.build();
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }
    }

    public static class Address {
      @SerializedName("city")
      String city;

      @SerializedName("country")
      String country;

      @SerializedName("line1")
      String line1;

      @SerializedName("line2")
      String line2;

      @SerializedName("postal_code")
      String postalCode;

      @SerializedName("state")
      String state;

      private Address(
          String city,
          String country,
          String line1,
          String line2,
          String postalCode,
          String state) {
        this.city = city;
        this.country = country;
        this.line1 = line1;
        this.line2 = line2;
        this.postalCode = postalCode;
        this.state = state;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.issuing.CardholderCreateParams.Billing.Address.Builder();
      }

      public static class Builder {
        private String city;

        private String country;

        private String line1;

        private String line2;

        private String postalCode;

        private String state;

        public Address build() {
          return new Address(city, country, line1, line2, postalCode, state);
        }

        public Builder setCity(String city) {
          this.city = city;
          return this;
        }

        public Builder setCountry(String country) {
          this.country = country;
          return this;
        }

        public Builder setLine1(String line1) {
          this.line1 = line1;
          return this;
        }

        public Builder setLine2(String line2) {
          this.line2 = line2;
          return this;
        }

        public Builder setPostalCode(String postalCode) {
          this.postalCode = postalCode;
          return this;
        }

        public Builder setState(String state) {
          this.state = state;
          return this;
        }
      }
    }
  }

  public enum Status {
    @SerializedName("active")
    ACTIVE("active"),

    @SerializedName("inactive")
    INACTIVE("inactive");

    private final String value;

    Status(String value) {
      this.value = value;
    }
  }

  public enum Type {
    @SerializedName("business_entity")
    BUSINESS_ENTITY("business_entity"),

    @SerializedName("individual")
    INDIVIDUAL("individual");

    private final String value;

    Type(String value) {
      this.value = value;
    }
  }
}
