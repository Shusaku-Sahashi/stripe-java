// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InvoiceUpcomingParams extends ApiParamRequest {
  @SerializedName("coupon")
  String coupon;

  @SerializedName("customer")
  String customer;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("invoice_items")
  List<InvoiceItems> invoiceItems;

  @SerializedName("subscription")
  String subscription;

  @SerializedName("subscription_billing_cycle_anchor")
  Object subscriptionBillingCycleAnchor;

  @SerializedName("subscription_cancel_at_period_end")
  Boolean subscriptionCancelAtPeriodEnd;

  @SerializedName("subscription_cancel_now")
  Boolean subscriptionCancelNow;

  @SerializedName("subscription_items")
  List<SubscriptionItems> subscriptionItems;

  @SerializedName("subscription_prorate")
  Boolean subscriptionProrate;

  @SerializedName("subscription_proration_date")
  Long subscriptionProrationDate;

  @SerializedName("subscription_tax_percent")
  BigDecimal subscriptionTaxPercent;

  @SerializedName("subscription_trial_end")
  Object subscriptionTrialEnd;

  @SerializedName("subscription_trial_from_plan")
  Boolean subscriptionTrialFromPlan;

  private InvoiceUpcomingParams(
      String coupon,
      String customer,
      List<String> expand,
      List<InvoiceItems> invoiceItems,
      String subscription,
      Object subscriptionBillingCycleAnchor,
      Boolean subscriptionCancelAtPeriodEnd,
      Boolean subscriptionCancelNow,
      List<SubscriptionItems> subscriptionItems,
      Boolean subscriptionProrate,
      Long subscriptionProrationDate,
      BigDecimal subscriptionTaxPercent,
      Object subscriptionTrialEnd,
      Boolean subscriptionTrialFromPlan) {
    this.coupon = coupon;
    this.customer = customer;
    this.expand = expand;
    this.invoiceItems = invoiceItems;
    this.subscription = subscription;
    this.subscriptionBillingCycleAnchor = subscriptionBillingCycleAnchor;
    this.subscriptionCancelAtPeriodEnd = subscriptionCancelAtPeriodEnd;
    this.subscriptionCancelNow = subscriptionCancelNow;
    this.subscriptionItems = subscriptionItems;
    this.subscriptionProrate = subscriptionProrate;
    this.subscriptionProrationDate = subscriptionProrationDate;
    this.subscriptionTaxPercent = subscriptionTaxPercent;
    this.subscriptionTrialEnd = subscriptionTrialEnd;
    this.subscriptionTrialFromPlan = subscriptionTrialFromPlan;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.InvoiceUpcomingParams.Builder();
  }

  public static class Builder {
    private String coupon;

    private String customer;

    private List<String> expand;

    private List<InvoiceItems> invoiceItems;

    private String subscription;

    private Object subscriptionBillingCycleAnchor;

    private Boolean subscriptionCancelAtPeriodEnd;

    private Boolean subscriptionCancelNow;

    private List<SubscriptionItems> subscriptionItems;

    private Boolean subscriptionProrate;

    private Long subscriptionProrationDate;

    private BigDecimal subscriptionTaxPercent;

    private Object subscriptionTrialEnd;

    private Boolean subscriptionTrialFromPlan;

    public InvoiceUpcomingParams build() {
      return new InvoiceUpcomingParams(
          coupon,
          customer,
          expand,
          invoiceItems,
          subscription,
          subscriptionBillingCycleAnchor,
          subscriptionCancelAtPeriodEnd,
          subscriptionCancelNow,
          subscriptionItems,
          subscriptionProrate,
          subscriptionProrationDate,
          subscriptionTaxPercent,
          subscriptionTrialEnd,
          subscriptionTrialFromPlan);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder addInvoiceItems(InvoiceItems.Builder element) {
      if (this.invoiceItems == null) {
        this.invoiceItems = new ArrayList<>();
      }
      this.invoiceItems.add(element.build());
      return this;
    }

    public Builder addSubscriptionItems(SubscriptionItems.Builder element) {
      if (this.subscriptionItems == null) {
        this.subscriptionItems = new ArrayList<>();
      }
      this.subscriptionItems.add(element.build());
      return this;
    }

    public Builder setCoupon(String coupon) {
      this.coupon = coupon;
      return this;
    }

    public Builder setCustomer(String customer) {
      this.customer = customer;
      return this;
    }

    public Builder setSubscription(String subscription) {
      this.subscription = subscription;
      return this;
    }

    public Builder setSubscriptionBillingCycleAnchor(Long subscriptionBillingCycleAnchor) {
      this.subscriptionBillingCycleAnchor = subscriptionBillingCycleAnchor;
      return this;
    }

    public Builder setSubscriptionBillingCycleAnchor(
        SubscriptionBillingCycleAnchor subscriptionBillingCycleAnchor) {
      this.subscriptionBillingCycleAnchor = subscriptionBillingCycleAnchor;
      return this;
    }

    public Builder setSubscriptionCancelAtPeriodEnd(Boolean subscriptionCancelAtPeriodEnd) {
      this.subscriptionCancelAtPeriodEnd = subscriptionCancelAtPeriodEnd;
      return this;
    }

    public Builder setSubscriptionCancelNow(Boolean subscriptionCancelNow) {
      this.subscriptionCancelNow = subscriptionCancelNow;
      return this;
    }

    public Builder setSubscriptionProrate(Boolean subscriptionProrate) {
      this.subscriptionProrate = subscriptionProrate;
      return this;
    }

    public Builder setSubscriptionProrationDate(Long subscriptionProrationDate) {
      this.subscriptionProrationDate = subscriptionProrationDate;
      return this;
    }

    public Builder setSubscriptionTaxPercent(BigDecimal subscriptionTaxPercent) {
      this.subscriptionTaxPercent = subscriptionTaxPercent;
      return this;
    }

    public Builder setSubscriptionTrialEnd(Long subscriptionTrialEnd) {
      this.subscriptionTrialEnd = subscriptionTrialEnd;
      return this;
    }

    public Builder setSubscriptionTrialEnd(SubscriptionTrialEnd subscriptionTrialEnd) {
      this.subscriptionTrialEnd = subscriptionTrialEnd;
      return this;
    }

    public Builder setSubscriptionTrialFromPlan(Boolean subscriptionTrialFromPlan) {
      this.subscriptionTrialFromPlan = subscriptionTrialFromPlan;
      return this;
    }
  }

  public static class InvoiceItems {
    @SerializedName("amount")
    Long amount;

    @SerializedName("currency")
    String currency;

    @SerializedName("description")
    String description;

    @SerializedName("discountable")
    Boolean discountable;

    @SerializedName("invoiceitem")
    String invoiceitem;

    @SerializedName("metadata")
    Map<String, String> metadata;

    @SerializedName("period")
    Period period;

    @SerializedName("quantity")
    Long quantity;

    @SerializedName("unit_amount")
    Long unitAmount;

    private InvoiceItems(
        Long amount,
        String currency,
        String description,
        Boolean discountable,
        String invoiceitem,
        Map<String, String> metadata,
        Period period,
        Long quantity,
        Long unitAmount) {
      this.amount = amount;
      this.currency = currency;
      this.description = description;
      this.discountable = discountable;
      this.invoiceitem = invoiceitem;
      this.metadata = metadata;
      this.period = period;
      this.quantity = quantity;
      this.unitAmount = unitAmount;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.InvoiceUpcomingParams.InvoiceItems.Builder();
    }

    public static class Builder {
      private Long amount;

      private String currency;

      private String description;

      private Boolean discountable;

      private String invoiceitem;

      private Map<String, String> metadata;

      private Period period;

      private Long quantity;

      private Long unitAmount;

      public InvoiceItems build() {
        return new InvoiceItems(
            amount,
            currency,
            description,
            discountable,
            invoiceitem,
            metadata,
            period,
            quantity,
            unitAmount);
      }

      public Builder putMetadata(String key, String value) {
        if (this.metadata == null) {
          this.metadata = new HashMap<>();
        }
        this.metadata.put(key, value);
        return this;
      }

      public Builder setAmount(Long amount) {
        this.amount = amount;
        return this;
      }

      public Builder setCurrency(String currency) {
        this.currency = currency;
        return this;
      }

      public Builder setDescription(String description) {
        this.description = description;
        return this;
      }

      public Builder setDiscountable(Boolean discountable) {
        this.discountable = discountable;
        return this;
      }

      public Builder setInvoiceitem(String invoiceitem) {
        this.invoiceitem = invoiceitem;
        return this;
      }

      public Builder setPeriod(Period.Builder period) {
        this.period = period.build();
        return this;
      }

      public Builder setQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
      }

      public Builder setUnitAmount(Long unitAmount) {
        this.unitAmount = unitAmount;
        return this;
      }
    }

    public static class Period {
      @SerializedName("end")
      Long end;

      @SerializedName("start")
      Long start;

      private Period(Long end, Long start) {
        this.end = end;
        this.start = start;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.InvoiceUpcomingParams.InvoiceItems.Period.Builder();
      }

      public static class Builder {
        private Long end;

        private Long start;

        public Period build() {
          return new Period(end, start);
        }

        public Builder setEnd(Long end) {
          this.end = end;
          return this;
        }

        public Builder setStart(Long start) {
          this.start = start;
          return this;
        }
      }
    }
  }

  public static class SubscriptionItems {
    @SerializedName("billing_thresholds")
    BillingThresholds billingThresholds;

    @SerializedName("clear_usage")
    Boolean clearUsage;

    @SerializedName("deleted")
    Boolean deleted;

    @SerializedName("id")
    String id;

    @SerializedName("metadata")
    Map<String, String> metadata;

    @SerializedName("plan")
    String plan;

    @SerializedName("quantity")
    Long quantity;

    private SubscriptionItems(
        BillingThresholds billingThresholds,
        Boolean clearUsage,
        Boolean deleted,
        String id,
        Map<String, String> metadata,
        String plan,
        Long quantity) {
      this.billingThresholds = billingThresholds;
      this.clearUsage = clearUsage;
      this.deleted = deleted;
      this.id = id;
      this.metadata = metadata;
      this.plan = plan;
      this.quantity = quantity;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.InvoiceUpcomingParams.SubscriptionItems.Builder();
    }

    public static class Builder {
      private BillingThresholds billingThresholds;

      private Boolean clearUsage;

      private Boolean deleted;

      private String id;

      private Map<String, String> metadata;

      private String plan;

      private Long quantity;

      public SubscriptionItems build() {
        return new SubscriptionItems(
            billingThresholds, clearUsage, deleted, id, metadata, plan, quantity);
      }

      public Builder putMetadata(String key, String value) {
        if (this.metadata == null) {
          this.metadata = new HashMap<>();
        }
        this.metadata.put(key, value);
        return this;
      }

      public Builder setBillingThresholds(BillingThresholds.Builder billingThresholds) {
        this.billingThresholds = billingThresholds.build();
        return this;
      }

      public Builder setClearUsage(Boolean clearUsage) {
        this.clearUsage = clearUsage;
        return this;
      }

      public Builder setDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
      }

      public Builder setId(String id) {
        this.id = id;
        return this;
      }

      public Builder setPlan(String plan) {
        this.plan = plan;
        return this;
      }

      public Builder setQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
      }
    }

    public static class BillingThresholds {
      @SerializedName("usage_gte")
      Long usageGte;

      private BillingThresholds(Long usageGte) {
        this.usageGte = usageGte;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.InvoiceUpcomingParams.SubscriptionItems.BillingThresholds
            .Builder();
      }

      public static class Builder {
        private Long usageGte;

        public BillingThresholds build() {
          return new BillingThresholds(usageGte);
        }

        public Builder setUsageGte(Long usageGte) {
          this.usageGte = usageGte;
          return this;
        }
      }
    }
  }

  public enum SubscriptionBillingCycleAnchor {
    @SerializedName("now")
    NOW("now"),

    @SerializedName("unchanged")
    UNCHANGED("unchanged");

    private final String value;

    SubscriptionBillingCycleAnchor(String value) {
      this.value = value;
    }
  }

  public enum SubscriptionTrialEnd {
    @SerializedName("now")
    NOW("now");

    private final String value;

    SubscriptionTrialEnd(String value) {
      this.value = value;
    }
  }
}
