// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TokenCreateParams extends ApiParamRequest {
  @SerializedName("account")
  Account account;

  @SerializedName("amount")
  Long amount;

  @SerializedName("bank_account")
  Object bankAccount;

  @SerializedName("card")
  Object card;

  @SerializedName("currency")
  String currency;

  @SerializedName("customer")
  String customer;

  @SerializedName("email")
  String email;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("external_id")
  String externalId;

  @SerializedName("iovation_blackbox")
  String iovationBlackbox;

  @SerializedName("ip")
  String ip;

  @SerializedName("payment_user_agent")
  String paymentUserAgent;

  @SerializedName("pii")
  Pii pii;

  @SerializedName("recipient")
  String recipient;

  @SerializedName("referrer")
  String referrer;

  @SerializedName("request_id")
  String requestId;

  @SerializedName("user_agent")
  String userAgent;

  @SerializedName("validation_type")
  ValidationType validationType;

  private TokenCreateParams(
      Account account,
      Long amount,
      Object bankAccount,
      Object card,
      String currency,
      String customer,
      String email,
      List<String> expand,
      String externalId,
      String iovationBlackbox,
      String ip,
      String paymentUserAgent,
      Pii pii,
      String recipient,
      String referrer,
      String requestId,
      String userAgent,
      ValidationType validationType) {
    this.account = account;
    this.amount = amount;
    this.bankAccount = bankAccount;
    this.card = card;
    this.currency = currency;
    this.customer = customer;
    this.email = email;
    this.expand = expand;
    this.externalId = externalId;
    this.iovationBlackbox = iovationBlackbox;
    this.ip = ip;
    this.paymentUserAgent = paymentUserAgent;
    this.pii = pii;
    this.recipient = recipient;
    this.referrer = referrer;
    this.requestId = requestId;
    this.userAgent = userAgent;
    this.validationType = validationType;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.TokenCreateParams.Builder();
  }

  public static class Builder {
    private Account account;

    private Long amount;

    private Object bankAccount;

    private Object card;

    private String currency;

    private String customer;

    private String email;

    private List<String> expand;

    private String externalId;

    private String iovationBlackbox;

    private String ip;

    private String paymentUserAgent;

    private Pii pii;

    private String recipient;

    private String referrer;

    private String requestId;

    private String userAgent;

    private ValidationType validationType;

    public TokenCreateParams build() {
      return new TokenCreateParams(
          account,
          amount,
          bankAccount,
          card,
          currency,
          customer,
          email,
          expand,
          externalId,
          iovationBlackbox,
          ip,
          paymentUserAgent,
          pii,
          recipient,
          referrer,
          requestId,
          userAgent,
          validationType);
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder setAccount(Account.Builder account) {
      this.account = account.build();
      return this;
    }

    public Builder setAmount(Long amount) {
      this.amount = amount;
      return this;
    }

    public Builder setBankAccount(Map<String, Object> bankAccount) {
      this.bankAccount = bankAccount;
      return this;
    }

    public Builder setBankAccount(String bankAccount) {
      this.bankAccount = bankAccount;
      return this;
    }

    public Builder setCard(String card) {
      this.card = card;
      return this;
    }

    public Builder setCard(CardApplePaySpecs.Builder card) {
      this.card = card.build();
      return this;
    }

    public Builder setCard(CardEncryptedCardSpecs.Builder card) {
      this.card = card.build();
      return this;
    }

    public Builder setCard(CardSwipeDataSpecs.Builder card) {
      this.card = card.build();
      return this;
    }

    public Builder setCard(CardCreditCardSpecs.Builder card) {
      this.card = card.build();
      return this;
    }

    public Builder setCurrency(String currency) {
      this.currency = currency;
      return this;
    }

    public Builder setCustomer(String customer) {
      this.customer = customer;
      return this;
    }

    public Builder setEmail(String email) {
      this.email = email;
      return this;
    }

    public Builder setExternalId(String externalId) {
      this.externalId = externalId;
      return this;
    }

    public Builder setIovationBlackbox(String iovationBlackbox) {
      this.iovationBlackbox = iovationBlackbox;
      return this;
    }

    public Builder setIp(String ip) {
      this.ip = ip;
      return this;
    }

    public Builder setPaymentUserAgent(String paymentUserAgent) {
      this.paymentUserAgent = paymentUserAgent;
      return this;
    }

    public Builder setPii(Pii.Builder pii) {
      this.pii = pii.build();
      return this;
    }

    public Builder setRecipient(String recipient) {
      this.recipient = recipient;
      return this;
    }

    public Builder setReferrer(String referrer) {
      this.referrer = referrer;
      return this;
    }

    public Builder setRequestId(String requestId) {
      this.requestId = requestId;
      return this;
    }

    public Builder setUserAgent(String userAgent) {
      this.userAgent = userAgent;
      return this;
    }

    public Builder setValidationType(ValidationType validationType) {
      this.validationType = validationType;
      return this;
    }
  }

  public static class Account {
    @SerializedName("legal_entity")
    LegalEntity legalEntity;

    @SerializedName("tos_shown_and_accepted")
    Boolean tosShownAndAccepted;

    private Account(LegalEntity legalEntity, Boolean tosShownAndAccepted) {
      this.legalEntity = legalEntity;
      this.tosShownAndAccepted = tosShownAndAccepted;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.TokenCreateParams.Account.Builder();
    }

    public static class Builder {
      private LegalEntity legalEntity;

      private Boolean tosShownAndAccepted;

      public Account build() {
        return new Account(legalEntity, tosShownAndAccepted);
      }

      public Builder setLegalEntity(LegalEntity.Builder legalEntity) {
        this.legalEntity = legalEntity.build();
        return this;
      }

      public Builder setTosShownAndAccepted(Boolean tosShownAndAccepted) {
        this.tosShownAndAccepted = tosShownAndAccepted;
        return this;
      }
    }

    public static class LegalEntity {
      @SerializedName("additional_owners")
      Object additionalOwners;

      @SerializedName("address")
      Address address;

      @SerializedName("address_kana")
      AddressKana addressKana;

      @SerializedName("address_kanji")
      AddressKanji addressKanji;

      @SerializedName("business_name")
      String businessName;

      @SerializedName("business_name_kana")
      String businessNameKana;

      @SerializedName("business_name_kanji")
      String businessNameKanji;

      @SerializedName("business_tax_id")
      String businessTaxId;

      @SerializedName("business_vat_id")
      String businessVatId;

      @SerializedName("dob")
      Dob dob;

      @SerializedName("first_name")
      String firstName;

      @SerializedName("first_name_kana")
      String firstNameKana;

      @SerializedName("first_name_kanji")
      String firstNameKanji;

      @SerializedName("gender")
      String gender;

      @SerializedName("last_name")
      String lastName;

      @SerializedName("last_name_kana")
      String lastNameKana;

      @SerializedName("last_name_kanji")
      String lastNameKanji;

      @SerializedName("maiden_name")
      String maidenName;

      @SerializedName("personal_address")
      PersonalAddress personalAddress;

      @SerializedName("personal_address_kana")
      PersonalAddressKana personalAddressKana;

      @SerializedName("personal_address_kanji")
      PersonalAddressKanji personalAddressKanji;

      @SerializedName("personal_id_number")
      String personalIdNumber;

      @SerializedName("phone_number")
      String phoneNumber;

      @SerializedName("ssn_last_4")
      String ssnLast4;

      @SerializedName("tax_id_registrar")
      String taxIdRegistrar;

      @SerializedName("type")
      String type;

      @SerializedName("verification")
      Verification verification;

      private LegalEntity(
          Object additionalOwners,
          Address address,
          AddressKana addressKana,
          AddressKanji addressKanji,
          String businessName,
          String businessNameKana,
          String businessNameKanji,
          String businessTaxId,
          String businessVatId,
          Dob dob,
          String firstName,
          String firstNameKana,
          String firstNameKanji,
          String gender,
          String lastName,
          String lastNameKana,
          String lastNameKanji,
          String maidenName,
          PersonalAddress personalAddress,
          PersonalAddressKana personalAddressKana,
          PersonalAddressKanji personalAddressKanji,
          String personalIdNumber,
          String phoneNumber,
          String ssnLast4,
          String taxIdRegistrar,
          String type,
          Verification verification) {
        this.additionalOwners = additionalOwners;
        this.address = address;
        this.addressKana = addressKana;
        this.addressKanji = addressKanji;
        this.businessName = businessName;
        this.businessNameKana = businessNameKana;
        this.businessNameKanji = businessNameKanji;
        this.businessTaxId = businessTaxId;
        this.businessVatId = businessVatId;
        this.dob = dob;
        this.firstName = firstName;
        this.firstNameKana = firstNameKana;
        this.firstNameKanji = firstNameKanji;
        this.gender = gender;
        this.lastName = lastName;
        this.lastNameKana = lastNameKana;
        this.lastNameKanji = lastNameKanji;
        this.maidenName = maidenName;
        this.personalAddress = personalAddress;
        this.personalAddressKana = personalAddressKana;
        this.personalAddressKanji = personalAddressKanji;
        this.personalIdNumber = personalIdNumber;
        this.phoneNumber = phoneNumber;
        this.ssnLast4 = ssnLast4;
        this.taxIdRegistrar = taxIdRegistrar;
        this.type = type;
        this.verification = verification;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.TokenCreateParams.Account.LegalEntity.Builder();
      }

      public static class Builder {
        private Object additionalOwners;

        private Address address;

        private AddressKana addressKana;

        private AddressKanji addressKanji;

        private String businessName;

        private String businessNameKana;

        private String businessNameKanji;

        private String businessTaxId;

        private String businessVatId;

        private Dob dob;

        private String firstName;

        private String firstNameKana;

        private String firstNameKanji;

        private String gender;

        private String lastName;

        private String lastNameKana;

        private String lastNameKanji;

        private String maidenName;

        private PersonalAddress personalAddress;

        private PersonalAddressKana personalAddressKana;

        private PersonalAddressKanji personalAddressKanji;

        private String personalIdNumber;

        private String phoneNumber;

        private String ssnLast4;

        private String taxIdRegistrar;

        private String type;

        private Verification verification;

        public LegalEntity build() {
          return new LegalEntity(
              additionalOwners,
              address,
              addressKana,
              addressKanji,
              businessName,
              businessNameKana,
              businessNameKanji,
              businessTaxId,
              businessVatId,
              dob,
              firstName,
              firstNameKana,
              firstNameKanji,
              gender,
              lastName,
              lastNameKana,
              lastNameKanji,
              maidenName,
              personalAddress,
              personalAddressKana,
              personalAddressKanji,
              personalIdNumber,
              phoneNumber,
              ssnLast4,
              taxIdRegistrar,
              type,
              verification);
        }

        public Builder setAdditionalOwners(Map<String, AdditionalOwners> additionalOwners) {
          this.additionalOwners = additionalOwners;
          return this;
        }

        public Builder setAdditionalOwners(List<AdditionalOwners> additionalOwners) {
          this.additionalOwners = additionalOwners;
          return this;
        }

        public Builder setAddress(Address.Builder address) {
          this.address = address.build();
          return this;
        }

        public Builder setAddressKana(AddressKana.Builder addressKana) {
          this.addressKana = addressKana.build();
          return this;
        }

        public Builder setAddressKanji(AddressKanji.Builder addressKanji) {
          this.addressKanji = addressKanji.build();
          return this;
        }

        public Builder setBusinessName(String businessName) {
          this.businessName = businessName;
          return this;
        }

        public Builder setBusinessNameKana(String businessNameKana) {
          this.businessNameKana = businessNameKana;
          return this;
        }

        public Builder setBusinessNameKanji(String businessNameKanji) {
          this.businessNameKanji = businessNameKanji;
          return this;
        }

        public Builder setBusinessTaxId(String businessTaxId) {
          this.businessTaxId = businessTaxId;
          return this;
        }

        public Builder setBusinessVatId(String businessVatId) {
          this.businessVatId = businessVatId;
          return this;
        }

        public Builder setDob(Dob.Builder dob) {
          this.dob = dob.build();
          return this;
        }

        public Builder setFirstName(String firstName) {
          this.firstName = firstName;
          return this;
        }

        public Builder setFirstNameKana(String firstNameKana) {
          this.firstNameKana = firstNameKana;
          return this;
        }

        public Builder setFirstNameKanji(String firstNameKanji) {
          this.firstNameKanji = firstNameKanji;
          return this;
        }

        public Builder setGender(String gender) {
          this.gender = gender;
          return this;
        }

        public Builder setLastName(String lastName) {
          this.lastName = lastName;
          return this;
        }

        public Builder setLastNameKana(String lastNameKana) {
          this.lastNameKana = lastNameKana;
          return this;
        }

        public Builder setLastNameKanji(String lastNameKanji) {
          this.lastNameKanji = lastNameKanji;
          return this;
        }

        public Builder setMaidenName(String maidenName) {
          this.maidenName = maidenName;
          return this;
        }

        public Builder setPersonalAddress(PersonalAddress.Builder personalAddress) {
          this.personalAddress = personalAddress.build();
          return this;
        }

        public Builder setPersonalAddressKana(PersonalAddressKana.Builder personalAddressKana) {
          this.personalAddressKana = personalAddressKana.build();
          return this;
        }

        public Builder setPersonalAddressKanji(PersonalAddressKanji.Builder personalAddressKanji) {
          this.personalAddressKanji = personalAddressKanji.build();
          return this;
        }

        public Builder setPersonalIdNumber(String personalIdNumber) {
          this.personalIdNumber = personalIdNumber;
          return this;
        }

        public Builder setPhoneNumber(String phoneNumber) {
          this.phoneNumber = phoneNumber;
          return this;
        }

        public Builder setSsnLast4(String ssnLast4) {
          this.ssnLast4 = ssnLast4;
          return this;
        }

        public Builder setTaxIdRegistrar(String taxIdRegistrar) {
          this.taxIdRegistrar = taxIdRegistrar;
          return this;
        }

        public Builder setType(String type) {
          this.type = type;
          return this;
        }

        public Builder setVerification(Verification.Builder verification) {
          this.verification = verification.build();
          return this;
        }
      }

      public static class AdditionalOwners {
        @SerializedName("address")
        Address address;

        @SerializedName("dob")
        Dob dob;

        @SerializedName("email")
        String email;

        @SerializedName("first_name")
        String firstName;

        @SerializedName("last_name")
        String lastName;

        @SerializedName("maiden_name")
        String maidenName;

        @SerializedName("personal_id_number")
        String personalIdNumber;

        @SerializedName("phone")
        String phone;

        @SerializedName("ssn_last_4")
        String ssnLast4;

        @SerializedName("verification")
        Verification verification;

        private AdditionalOwners(
            Address address,
            Dob dob,
            String email,
            String firstName,
            String lastName,
            String maidenName,
            String personalIdNumber,
            String phone,
            String ssnLast4,
            Verification verification) {
          this.address = address;
          this.dob = dob;
          this.email = email;
          this.firstName = firstName;
          this.lastName = lastName;
          this.maidenName = maidenName;
          this.personalIdNumber = personalIdNumber;
          this.phone = phone;
          this.ssnLast4 = ssnLast4;
          this.verification = verification;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.AdditionalOwners
              .Builder();
        }

        public static class Builder {
          private Address address;

          private Dob dob;

          private String email;

          private String firstName;

          private String lastName;

          private String maidenName;

          private String personalIdNumber;

          private String phone;

          private String ssnLast4;

          private Verification verification;

          public AdditionalOwners build() {
            return new AdditionalOwners(
                address,
                dob,
                email,
                firstName,
                lastName,
                maidenName,
                personalIdNumber,
                phone,
                ssnLast4,
                verification);
          }

          public Builder setAddress(Address.Builder address) {
            this.address = address.build();
            return this;
          }

          public Builder setDob(Dob.Builder dob) {
            this.dob = dob.build();
            return this;
          }

          public Builder setEmail(String email) {
            this.email = email;
            return this;
          }

          public Builder setFirstName(String firstName) {
            this.firstName = firstName;
            return this;
          }

          public Builder setLastName(String lastName) {
            this.lastName = lastName;
            return this;
          }

          public Builder setMaidenName(String maidenName) {
            this.maidenName = maidenName;
            return this;
          }

          public Builder setPersonalIdNumber(String personalIdNumber) {
            this.personalIdNumber = personalIdNumber;
            return this;
          }

          public Builder setPhone(String phone) {
            this.phone = phone;
            return this;
          }

          public Builder setSsnLast4(String ssnLast4) {
            this.ssnLast4 = ssnLast4;
            return this;
          }

          public Builder setVerification(Verification.Builder verification) {
            this.verification = verification.build();
            return this;
          }
        }

        public static class Address {
          @SerializedName("city")
          String city;

          @SerializedName("country")
          String country;

          @SerializedName("line1")
          String line1;

          @SerializedName("line2")
          String line2;

          @SerializedName("postal_code")
          String postalCode;

          @SerializedName("state")
          String state;

          private Address(
              String city,
              String country,
              String line1,
              String line2,
              String postalCode,
              String state) {
            this.city = city;
            this.country = country;
            this.line1 = line1;
            this.line2 = line2;
            this.postalCode = postalCode;
            this.state = state;
          }

          public static Builder newBuilder() {
            return new com.stripe.param.TokenCreateParams.Account.LegalEntity.AdditionalOwners
                .Address.Builder();
          }

          public static class Builder {
            private String city;

            private String country;

            private String line1;

            private String line2;

            private String postalCode;

            private String state;

            public Address build() {
              return new Address(city, country, line1, line2, postalCode, state);
            }

            public Builder setCity(String city) {
              this.city = city;
              return this;
            }

            public Builder setCountry(String country) {
              this.country = country;
              return this;
            }

            public Builder setLine1(String line1) {
              this.line1 = line1;
              return this;
            }

            public Builder setLine2(String line2) {
              this.line2 = line2;
              return this;
            }

            public Builder setPostalCode(String postalCode) {
              this.postalCode = postalCode;
              return this;
            }

            public Builder setState(String state) {
              this.state = state;
              return this;
            }
          }
        }

        public static class Dob {
          @SerializedName("day")
          Long day;

          @SerializedName("month")
          Long month;

          @SerializedName("year")
          Long year;

          private Dob(Long day, Long month, Long year) {
            this.day = day;
            this.month = month;
            this.year = year;
          }

          public static Builder newBuilder() {
            return new com.stripe.param.TokenCreateParams.Account.LegalEntity.AdditionalOwners.Dob
                .Builder();
          }

          public static class Builder {
            private Long day;

            private Long month;

            private Long year;

            public Dob build() {
              return new Dob(day, month, year);
            }

            public Builder setDay(Long day) {
              this.day = day;
              return this;
            }

            public Builder setMonth(Long month) {
              this.month = month;
              return this;
            }

            public Builder setYear(Long year) {
              this.year = year;
              return this;
            }
          }
        }

        public static class Verification {
          @SerializedName("document")
          String document;

          @SerializedName("status")
          Status status;

          private Verification(String document, Status status) {
            this.document = document;
            this.status = status;
          }

          public static Builder newBuilder() {
            return new com.stripe.param.TokenCreateParams.Account.LegalEntity.AdditionalOwners
                .Verification.Builder();
          }

          public static class Builder {
            private String document;

            private Status status;

            public Verification build() {
              return new Verification(document, status);
            }

            public Builder setDocument(String document) {
              this.document = document;
              return this;
            }

            public Builder setStatus(Status status) {
              this.status = status;
              return this;
            }
          }

          public enum Status {
            @SerializedName("pending")
            PENDING("pending"),

            @SerializedName("unverified")
            UNVERIFIED("unverified"),

            @SerializedName("verified")
            VERIFIED("verified");

            private final String value;

            Status(String value) {
              this.value = value;
            }
          }
        }
      }

      public static class Address {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        private Address(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.Address.Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          public Address build() {
            return new Address(city, country, line1, line2, postalCode, state);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }
        }
      }

      public static class AddressKana {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        @SerializedName("town")
        String town;

        private AddressKana(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state,
            String town) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
          this.town = town;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.AddressKana.Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          private String town;

          public AddressKana build() {
            return new AddressKana(city, country, line1, line2, postalCode, state, town);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }

          public Builder setTown(String town) {
            this.town = town;
            return this;
          }
        }
      }

      public static class AddressKanji {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        @SerializedName("town")
        String town;

        private AddressKanji(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state,
            String town) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
          this.town = town;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.AddressKanji.Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          private String town;

          public AddressKanji build() {
            return new AddressKanji(city, country, line1, line2, postalCode, state, town);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }

          public Builder setTown(String town) {
            this.town = town;
            return this;
          }
        }
      }

      public static class Dob {
        @SerializedName("day")
        Long day;

        @SerializedName("month")
        Long month;

        @SerializedName("year")
        Long year;

        private Dob(Long day, Long month, Long year) {
          this.day = day;
          this.month = month;
          this.year = year;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.Dob.Builder();
        }

        public static class Builder {
          private Long day;

          private Long month;

          private Long year;

          public Dob build() {
            return new Dob(day, month, year);
          }

          public Builder setDay(Long day) {
            this.day = day;
            return this;
          }

          public Builder setMonth(Long month) {
            this.month = month;
            return this;
          }

          public Builder setYear(Long year) {
            this.year = year;
            return this;
          }
        }
      }

      public static class PersonalAddress {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        private PersonalAddress(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.PersonalAddress
              .Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          public PersonalAddress build() {
            return new PersonalAddress(city, country, line1, line2, postalCode, state);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }
        }
      }

      public static class PersonalAddressKana {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        @SerializedName("town")
        String town;

        private PersonalAddressKana(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state,
            String town) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
          this.town = town;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.PersonalAddressKana
              .Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          private String town;

          public PersonalAddressKana build() {
            return new PersonalAddressKana(city, country, line1, line2, postalCode, state, town);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }

          public Builder setTown(String town) {
            this.town = town;
            return this;
          }
        }
      }

      public static class PersonalAddressKanji {
        @SerializedName("city")
        String city;

        @SerializedName("country")
        String country;

        @SerializedName("line1")
        String line1;

        @SerializedName("line2")
        String line2;

        @SerializedName("postal_code")
        String postalCode;

        @SerializedName("state")
        String state;

        @SerializedName("town")
        String town;

        private PersonalAddressKanji(
            String city,
            String country,
            String line1,
            String line2,
            String postalCode,
            String state,
            String town) {
          this.city = city;
          this.country = country;
          this.line1 = line1;
          this.line2 = line2;
          this.postalCode = postalCode;
          this.state = state;
          this.town = town;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.PersonalAddressKanji
              .Builder();
        }

        public static class Builder {
          private String city;

          private String country;

          private String line1;

          private String line2;

          private String postalCode;

          private String state;

          private String town;

          public PersonalAddressKanji build() {
            return new PersonalAddressKanji(city, country, line1, line2, postalCode, state, town);
          }

          public Builder setCity(String city) {
            this.city = city;
            return this;
          }

          public Builder setCountry(String country) {
            this.country = country;
            return this;
          }

          public Builder setLine1(String line1) {
            this.line1 = line1;
            return this;
          }

          public Builder setLine2(String line2) {
            this.line2 = line2;
            return this;
          }

          public Builder setPostalCode(String postalCode) {
            this.postalCode = postalCode;
            return this;
          }

          public Builder setState(String state) {
            this.state = state;
            return this;
          }

          public Builder setTown(String town) {
            this.town = town;
            return this;
          }
        }
      }

      public static class Verification {
        @SerializedName("document")
        String document;

        @SerializedName("status")
        Status status;

        private Verification(String document, Status status) {
          this.document = document;
          this.status = status;
        }

        public static Builder newBuilder() {
          return new com.stripe.param.TokenCreateParams.Account.LegalEntity.Verification.Builder();
        }

        public static class Builder {
          private String document;

          private Status status;

          public Verification build() {
            return new Verification(document, status);
          }

          public Builder setDocument(String document) {
            this.document = document;
            return this;
          }

          public Builder setStatus(Status status) {
            this.status = status;
            return this;
          }
        }

        public enum Status {
          @SerializedName("pending")
          PENDING("pending"),

          @SerializedName("unverified")
          UNVERIFIED("unverified"),

          @SerializedName("verified")
          VERIFIED("verified");

          private final String value;

          Status(String value) {
            this.value = value;
          }
        }
      }
    }
  }

  public static class CardApplePaySpecs {
    @SerializedName("address_city")
    String addressCity;

    @SerializedName("address_country")
    String addressCountry;

    @SerializedName("address_line1")
    String addressLine1;

    @SerializedName("address_line2")
    String addressLine2;

    @SerializedName("address_state")
    String addressState;

    @SerializedName("address_zip")
    String addressZip;

    @SerializedName("name")
    String name;

    @SerializedName("object")
    Object object;

    @SerializedName("pk_token")
    String pkToken;

    @SerializedName("token_cryptogram")
    String tokenCryptogram;

    @SerializedName("token_cryptogram_amount")
    Long tokenCryptogramAmount;

    @SerializedName("token_cryptogram_currency")
    String tokenCryptogramCurrency;

    @SerializedName("token_cryptogram_requestor")
    String tokenCryptogramRequestor;

    @SerializedName("token_cryptogram_used")
    Boolean tokenCryptogramUsed;

    private CardApplePaySpecs(
        String addressCity,
        String addressCountry,
        String addressLine1,
        String addressLine2,
        String addressState,
        String addressZip,
        String name,
        Object object,
        String pkToken,
        String tokenCryptogram,
        Long tokenCryptogramAmount,
        String tokenCryptogramCurrency,
        String tokenCryptogramRequestor,
        Boolean tokenCryptogramUsed) {
      this.addressCity = addressCity;
      this.addressCountry = addressCountry;
      this.addressLine1 = addressLine1;
      this.addressLine2 = addressLine2;
      this.addressState = addressState;
      this.addressZip = addressZip;
      this.name = name;
      this.object = object;
      this.pkToken = pkToken;
      this.tokenCryptogram = tokenCryptogram;
      this.tokenCryptogramAmount = tokenCryptogramAmount;
      this.tokenCryptogramCurrency = tokenCryptogramCurrency;
      this.tokenCryptogramRequestor = tokenCryptogramRequestor;
      this.tokenCryptogramUsed = tokenCryptogramUsed;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.TokenCreateParams.CardApplePaySpecs.Builder();
    }

    public static class Builder {
      private String addressCity;

      private String addressCountry;

      private String addressLine1;

      private String addressLine2;

      private String addressState;

      private String addressZip;

      private String name;

      private Object object;

      private String pkToken;

      private String tokenCryptogram;

      private Long tokenCryptogramAmount;

      private String tokenCryptogramCurrency;

      private String tokenCryptogramRequestor;

      private Boolean tokenCryptogramUsed;

      public CardApplePaySpecs build() {
        return new CardApplePaySpecs(
            addressCity,
            addressCountry,
            addressLine1,
            addressLine2,
            addressState,
            addressZip,
            name,
            object,
            pkToken,
            tokenCryptogram,
            tokenCryptogramAmount,
            tokenCryptogramCurrency,
            tokenCryptogramRequestor,
            tokenCryptogramUsed);
      }

      public Builder setAddressCity(String addressCity) {
        this.addressCity = addressCity;
        return this;
      }

      public Builder setAddressCountry(String addressCountry) {
        this.addressCountry = addressCountry;
        return this;
      }

      public Builder setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
      }

      public Builder setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
      }

      public Builder setAddressState(String addressState) {
        this.addressState = addressState;
        return this;
      }

      public Builder setAddressZip(String addressZip) {
        this.addressZip = addressZip;
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }

      public Builder setObject(Object object) {
        this.object = object;
        return this;
      }

      public Builder setPkToken(String pkToken) {
        this.pkToken = pkToken;
        return this;
      }

      public Builder setTokenCryptogram(String tokenCryptogram) {
        this.tokenCryptogram = tokenCryptogram;
        return this;
      }

      public Builder setTokenCryptogramAmount(Long tokenCryptogramAmount) {
        this.tokenCryptogramAmount = tokenCryptogramAmount;
        return this;
      }

      public Builder setTokenCryptogramCurrency(String tokenCryptogramCurrency) {
        this.tokenCryptogramCurrency = tokenCryptogramCurrency;
        return this;
      }

      public Builder setTokenCryptogramRequestor(String tokenCryptogramRequestor) {
        this.tokenCryptogramRequestor = tokenCryptogramRequestor;
        return this;
      }

      public Builder setTokenCryptogramUsed(Boolean tokenCryptogramUsed) {
        this.tokenCryptogramUsed = tokenCryptogramUsed;
        return this;
      }
    }

    public enum Object {
      @SerializedName("card")
      CARD("card");

      private final String value;

      Object(String value) {
        this.value = value;
      }
    }
  }

  public static class CardCreditCardSpecs {
    @SerializedName("address_city")
    String addressCity;

    @SerializedName("address_country")
    String addressCountry;

    @SerializedName("address_line1")
    String addressLine1;

    @SerializedName("address_line2")
    String addressLine2;

    @SerializedName("address_state")
    String addressState;

    @SerializedName("address_zip")
    String addressZip;

    @SerializedName("card_type")
    String cardType;

    @SerializedName("currency")
    String currency;

    @SerializedName("customer")
    String customer;

    @SerializedName("default_for_currency")
    Boolean defaultForCurrency;

    @SerializedName("exp_month")
    String expMonth;

    @SerializedName("exp_year")
    String expYear;

    @SerializedName("last4")
    String last4;

    @SerializedName("metadata")
    Map<String, String> metadata;

    @SerializedName("name")
    String name;

    @SerializedName("number")
    String number;

    @SerializedName("number_looks_valid")
    Boolean numberLooksValid;

    @SerializedName("number_luhn_valid")
    Boolean numberLuhnValid;

    @SerializedName("object")
    Object object;

    @SerializedName("3d_secure")
    ThreeDSecure threeDSecure;

    @SerializedName("tokenization_method")
    String tokenizationMethod;

    private CardCreditCardSpecs(
        String addressCity,
        String addressCountry,
        String addressLine1,
        String addressLine2,
        String addressState,
        String addressZip,
        String cardType,
        String currency,
        String customer,
        Boolean defaultForCurrency,
        String expMonth,
        String expYear,
        String last4,
        Map<String, String> metadata,
        String name,
        String number,
        Boolean numberLooksValid,
        Boolean numberLuhnValid,
        Object object,
        ThreeDSecure threeDSecure,
        String tokenizationMethod) {
      this.addressCity = addressCity;
      this.addressCountry = addressCountry;
      this.addressLine1 = addressLine1;
      this.addressLine2 = addressLine2;
      this.addressState = addressState;
      this.addressZip = addressZip;
      this.cardType = cardType;
      this.currency = currency;
      this.customer = customer;
      this.defaultForCurrency = defaultForCurrency;
      this.expMonth = expMonth;
      this.expYear = expYear;
      this.last4 = last4;
      this.metadata = metadata;
      this.name = name;
      this.number = number;
      this.numberLooksValid = numberLooksValid;
      this.numberLuhnValid = numberLuhnValid;
      this.object = object;
      this.threeDSecure = threeDSecure;
      this.tokenizationMethod = tokenizationMethod;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.TokenCreateParams.CardCreditCardSpecs.Builder();
    }

    public static class Builder {
      private String addressCity;

      private String addressCountry;

      private String addressLine1;

      private String addressLine2;

      private String addressState;

      private String addressZip;

      private String cardType;

      private String currency;

      private String customer;

      private Boolean defaultForCurrency;

      private String expMonth;

      private String expYear;

      private String last4;

      private Map<String, String> metadata;

      private String name;

      private String number;

      private Boolean numberLooksValid;

      private Boolean numberLuhnValid;

      private Object object;

      private ThreeDSecure threeDSecure;

      private String tokenizationMethod;

      public CardCreditCardSpecs build() {
        return new CardCreditCardSpecs(
            addressCity,
            addressCountry,
            addressLine1,
            addressLine2,
            addressState,
            addressZip,
            cardType,
            currency,
            customer,
            defaultForCurrency,
            expMonth,
            expYear,
            last4,
            metadata,
            name,
            number,
            numberLooksValid,
            numberLuhnValid,
            object,
            threeDSecure,
            tokenizationMethod);
      }

      public Builder putMetadata(String key, String value) {
        if (this.metadata == null) {
          this.metadata = new HashMap<>();
        }
        this.metadata.put(key, value);
        return this;
      }

      public Builder setAddressCity(String addressCity) {
        this.addressCity = addressCity;
        return this;
      }

      public Builder setAddressCountry(String addressCountry) {
        this.addressCountry = addressCountry;
        return this;
      }

      public Builder setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
      }

      public Builder setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
      }

      public Builder setAddressState(String addressState) {
        this.addressState = addressState;
        return this;
      }

      public Builder setAddressZip(String addressZip) {
        this.addressZip = addressZip;
        return this;
      }

      public Builder setCardType(String cardType) {
        this.cardType = cardType;
        return this;
      }

      public Builder setCurrency(String currency) {
        this.currency = currency;
        return this;
      }

      public Builder setCustomer(String customer) {
        this.customer = customer;
        return this;
      }

      public Builder setDefaultForCurrency(Boolean defaultForCurrency) {
        this.defaultForCurrency = defaultForCurrency;
        return this;
      }

      public Builder setExpMonth(String expMonth) {
        this.expMonth = expMonth;
        return this;
      }

      public Builder setExpYear(String expYear) {
        this.expYear = expYear;
        return this;
      }

      public Builder setLast4(String last4) {
        this.last4 = last4;
        return this;
      }

      public Builder setName(String name) {
        this.name = name;
        return this;
      }

      public Builder setNumber(String number) {
        this.number = number;
        return this;
      }

      public Builder setNumberLooksValid(Boolean numberLooksValid) {
        this.numberLooksValid = numberLooksValid;
        return this;
      }

      public Builder setNumberLuhnValid(Boolean numberLuhnValid) {
        this.numberLuhnValid = numberLuhnValid;
        return this;
      }

      public Builder setObject(Object object) {
        this.object = object;
        return this;
      }

      public Builder setThreeDSecure(ThreeDSecure.Builder threeDSecure) {
        this.threeDSecure = threeDSecure.build();
        return this;
      }

      public Builder setTokenizationMethod(String tokenizationMethod) {
        this.tokenizationMethod = tokenizationMethod;
        return this;
      }
    }

    public static class ThreeDSecure {
      @SerializedName("amount")
      Long amount;

      @SerializedName("currency")
      String currency;

      @SerializedName("preference")
      Preference preference;

      @SerializedName("return_url")
      String returnUrl;

      private ThreeDSecure(Long amount, String currency, Preference preference, String returnUrl) {
        this.amount = amount;
        this.currency = currency;
        this.preference = preference;
        this.returnUrl = returnUrl;
      }

      public static Builder newBuilder() {
        return new com.stripe.param.TokenCreateParams.CardCreditCardSpecs.ThreeDSecure.Builder();
      }

      public static class Builder {
        private Long amount;

        private String currency;

        private Preference preference;

        private String returnUrl;

        public ThreeDSecure build() {
          return new ThreeDSecure(amount, currency, preference, returnUrl);
        }

        public Builder setAmount(Long amount) {
          this.amount = amount;
          return this;
        }

        public Builder setCurrency(String currency) {
          this.currency = currency;
          return this;
        }

        public Builder setPreference(Preference preference) {
          this.preference = preference;
          return this;
        }

        public Builder setReturnUrl(String returnUrl) {
          this.returnUrl = returnUrl;
          return this;
        }
      }

      public enum Preference {
        @SerializedName("always")
        ALWAYS("always"),

        @SerializedName("only_if_required")
        ONLY_IF_REQUIRED("only_if_required");

        private final String value;

        Preference(String value) {
          this.value = value;
        }
      }
    }

    public enum Object {
      @SerializedName("card")
      CARD("card");

      private final String value;

      Object(String value) {
        this.value = value;
      }
    }
  }

  public static class CardEncryptedCardSpecs {
    @SerializedName("encrypted")
    String encrypted;

    private CardEncryptedCardSpecs(String encrypted) {
      this.encrypted = encrypted;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.TokenCreateParams.CardEncryptedCardSpecs.Builder();
    }

    public static class Builder {
      private String encrypted;

      public CardEncryptedCardSpecs build() {
        return new CardEncryptedCardSpecs(encrypted);
      }

      public Builder setEncrypted(String encrypted) {
        this.encrypted = encrypted;
        return this;
      }
    }
  }

  public static class CardSwipeDataSpecs {
    @SerializedName("cvc")
    String cvc;

    @SerializedName("swipe_data")
    String swipeData;

    private CardSwipeDataSpecs(String cvc, String swipeData) {
      this.cvc = cvc;
      this.swipeData = swipeData;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.TokenCreateParams.CardSwipeDataSpecs.Builder();
    }

    public static class Builder {
      private String cvc;

      private String swipeData;

      public CardSwipeDataSpecs build() {
        return new CardSwipeDataSpecs(cvc, swipeData);
      }

      public Builder setCvc(String cvc) {
        this.cvc = cvc;
        return this;
      }

      public Builder setSwipeData(String swipeData) {
        this.swipeData = swipeData;
        return this;
      }
    }
  }

  public static class Pii {
    @SerializedName("personal_id_number")
    String personalIdNumber;

    @SerializedName("ssn_last_4")
    String ssnLast4;

    @SerializedName("tax_id")
    String taxId;

    private Pii(String personalIdNumber, String ssnLast4, String taxId) {
      this.personalIdNumber = personalIdNumber;
      this.ssnLast4 = ssnLast4;
      this.taxId = taxId;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.TokenCreateParams.Pii.Builder();
    }

    public static class Builder {
      private String personalIdNumber;

      private String ssnLast4;

      private String taxId;

      public Pii build() {
        return new Pii(personalIdNumber, ssnLast4, taxId);
      }

      public Builder setPersonalIdNumber(String personalIdNumber) {
        this.personalIdNumber = personalIdNumber;
        return this;
      }

      public Builder setSsnLast4(String ssnLast4) {
        this.ssnLast4 = ssnLast4;
        return this;
      }

      public Builder setTaxId(String taxId) {
        this.taxId = taxId;
        return this;
      }
    }
  }

  public enum ValidationType {
    @SerializedName("amount")
    AMOUNT("amount"),

    @SerializedName("card")
    CARD("card"),

    @SerializedName("none")
    NONE("none");

    private final String value;

    ValidationType(String value) {
      this.value = value;
    }
  }
}
