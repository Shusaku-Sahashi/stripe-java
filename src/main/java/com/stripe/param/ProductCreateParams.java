// Generated by com.stripe.generator.entity.SdkBuilder

package com.stripe.param;

import com.google.gson.annotations.SerializedName;
import com.stripe.net.ApiParamRequest;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductCreateParams extends ApiParamRequest {
  @SerializedName("active")
  Boolean active;

  @SerializedName("attributes")
  List<String> attributes;

  @SerializedName("caption")
  String caption;

  @SerializedName("deactivate_on")
  List<String> deactivateOn;

  @SerializedName("description")
  String description;

  @SerializedName("expand")
  List<String> expand;

  @SerializedName("id")
  String id;

  @SerializedName("images")
  List<String> images;

  @SerializedName("metadata")
  Map<String, String> metadata;

  @SerializedName("name")
  String name;

  @SerializedName("package_dimensions")
  PackageDimensions packageDimensions;

  @SerializedName("shippable")
  Boolean shippable;

  @SerializedName("statement_descriptor")
  String statementDescriptor;

  @SerializedName("type")
  Type type;

  @SerializedName("unit_label")
  String unitLabel;

  @SerializedName("url")
  String url;

  private ProductCreateParams(
      Boolean active,
      List<String> attributes,
      String caption,
      List<String> deactivateOn,
      String description,
      List<String> expand,
      String id,
      List<String> images,
      Map<String, String> metadata,
      String name,
      PackageDimensions packageDimensions,
      Boolean shippable,
      String statementDescriptor,
      Type type,
      String unitLabel,
      String url) {
    this.active = active;
    this.attributes = attributes;
    this.caption = caption;
    this.deactivateOn = deactivateOn;
    this.description = description;
    this.expand = expand;
    this.id = id;
    this.images = images;
    this.metadata = metadata;
    this.name = name;
    this.packageDimensions = packageDimensions;
    this.shippable = shippable;
    this.statementDescriptor = statementDescriptor;
    this.type = type;
    this.unitLabel = unitLabel;
    this.url = url;
  }

  public static Builder newBuilder() {
    return new com.stripe.param.ProductCreateParams.Builder();
  }

  public static class Builder {
    private Boolean active;

    private List<String> attributes;

    private String caption;

    private List<String> deactivateOn;

    private String description;

    private List<String> expand;

    private String id;

    private List<String> images;

    private Map<String, String> metadata;

    private String name;

    private PackageDimensions packageDimensions;

    private Boolean shippable;

    private String statementDescriptor;

    private Type type;

    private String unitLabel;

    private String url;

    public ProductCreateParams build() {
      return new ProductCreateParams(
          active,
          attributes,
          caption,
          deactivateOn,
          description,
          expand,
          id,
          images,
          metadata,
          name,
          packageDimensions,
          shippable,
          statementDescriptor,
          type,
          unitLabel,
          url);
    }

    public Builder addAttributes(String element) {
      if (this.attributes == null) {
        this.attributes = new ArrayList<>();
      }
      this.attributes.add(element);
      return this;
    }

    public Builder addDeactivateOn(String element) {
      if (this.deactivateOn == null) {
        this.deactivateOn = new ArrayList<>();
      }
      this.deactivateOn.add(element);
      return this;
    }

    public Builder addExpand(String element) {
      if (this.expand == null) {
        this.expand = new ArrayList<>();
      }
      this.expand.add(element);
      return this;
    }

    public Builder addImages(String element) {
      if (this.images == null) {
        this.images = new ArrayList<>();
      }
      this.images.add(element);
      return this;
    }

    public Builder putMetadata(String key, String value) {
      if (this.metadata == null) {
        this.metadata = new HashMap<>();
      }
      this.metadata.put(key, value);
      return this;
    }

    public Builder setActive(Boolean active) {
      this.active = active;
      return this;
    }

    public Builder setCaption(String caption) {
      this.caption = caption;
      return this;
    }

    public Builder setDescription(String description) {
      this.description = description;
      return this;
    }

    public Builder setId(String id) {
      this.id = id;
      return this;
    }

    public Builder setName(String name) {
      this.name = name;
      return this;
    }

    public Builder setPackageDimensions(PackageDimensions.Builder packageDimensions) {
      this.packageDimensions = packageDimensions.build();
      return this;
    }

    public Builder setShippable(Boolean shippable) {
      this.shippable = shippable;
      return this;
    }

    public Builder setStatementDescriptor(String statementDescriptor) {
      this.statementDescriptor = statementDescriptor;
      return this;
    }

    public Builder setType(Type type) {
      this.type = type;
      return this;
    }

    public Builder setUnitLabel(String unitLabel) {
      this.unitLabel = unitLabel;
      return this;
    }

    public Builder setUrl(String url) {
      this.url = url;
      return this;
    }
  }

  public static class PackageDimensions {
    @SerializedName("height")
    BigDecimal height;

    @SerializedName("length")
    BigDecimal length;

    @SerializedName("weight")
    BigDecimal weight;

    @SerializedName("width")
    BigDecimal width;

    private PackageDimensions(
        BigDecimal height, BigDecimal length, BigDecimal weight, BigDecimal width) {
      this.height = height;
      this.length = length;
      this.weight = weight;
      this.width = width;
    }

    public static Builder newBuilder() {
      return new com.stripe.param.ProductCreateParams.PackageDimensions.Builder();
    }

    public static class Builder {
      private BigDecimal height;

      private BigDecimal length;

      private BigDecimal weight;

      private BigDecimal width;

      public PackageDimensions build() {
        return new PackageDimensions(height, length, weight, width);
      }

      public Builder setHeight(BigDecimal height) {
        this.height = height;
        return this;
      }

      public Builder setLength(BigDecimal length) {
        this.length = length;
        return this;
      }

      public Builder setWeight(BigDecimal weight) {
        this.weight = weight;
        return this;
      }

      public Builder setWidth(BigDecimal width) {
        this.width = width;
        return this;
      }
    }
  }

  public enum Type {
    @SerializedName("good")
    GOOD("good"),

    @SerializedName("service")
    SERVICE("service");

    private final String value;

    Type(String value) {
      this.value = value;
    }
  }
}
